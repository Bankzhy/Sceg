Refactoring Type	Source Entity	Target Class	Source/Target accessed members	Rate it!
Move Method	org.freeplane.view.swing.map.NodeViewFactory::updateNoteViewer(org.freeplane.view.swing.map.NodeView, int, int, org.freeplane.view.swing.map.UpdateCause):void	org.freeplane.view.swing.map.NodeView	0/5	
Move Method	org.freeplane.view.swing.map.ZoomableLabelUI::layoutCompoundLabel(java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, org.freeplane.view.swing.map.ZoomableLabel):void	org.freeplane.view.swing.map.ZoomableLabel	0/5	
Move Method	org.freeplane.features.filter.FilterController::saveConditions(org.freeplane.features.filter.FilterConditions, java.lang.String, int):void	org.freeplane.features.filter.FilterConditions	0/3	
Move Method	org.freeplane.features.icon.mindmapmode.MIconController::addIcon(org.freeplane.features.map.NodeModel, org.freeplane.features.icon.MindIcon, int):void	org.freeplane.features.map.NodeModel	0/3	
Move Method	org.freeplane.features.map.mindmapmode.ChangeNodeLevelController::canMoveTo(org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel, java.util.List<org.freeplane.features.map.NodeModel>, org.freeplane.features.map.NodeModel):boolean	org.freeplane.features.map.NodeModel	0/3	
Move Method	org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController.StyleCopier::copy(org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/3	
Move Method	org.freeplane.main.application.Browser::openDocumentNotSupportedByDesktop(org.freeplane.core.util.Hyperlink):void	org.freeplane.core.util.Hyperlink	0/3	
Move Method	org.freeplane.view.swing.map.NodeViewLayoutHelper::isConsideredForAlignment(org.freeplane.view.swing.map.NodeView):boolean	org.freeplane.view.swing.map.NodeView	0/3	
Move Method	org.freeplane.features.attribute.AttributeBuilder::saveAttribute(org.freeplane.features.map.NodeModel, org.freeplane.core.io.ITreeWriter, org.freeplane.features.attribute.NodeAttributeTableModel, org.freeplane.features.attribute.Attribute):void	org.freeplane.features.attribute.Attribute	0/2	
Move Method	org.freeplane.features.attribute.AttributeController::createAttributeTableModel(org.freeplane.features.map.NodeModel):org.freeplane.features.attribute.NodeAttributeTableModel	org.freeplane.features.map.NodeModel	0/2	
Move Method	org.freeplane.features.attribute.mindmapmode.ImportAttributesDialog::createValueSubTrees(javax.swing.tree.DefaultMutableTreeNode, org.freeplane.features.attribute.AttributeRegistryElement, org.freeplane.features.attribute.AttributeRegistry):void	org.freeplane.features.attribute.AttributeRegistryElement	0/2	
Move Method	org.freeplane.features.export.mindmapmode.ExportDialog::getAcceptableFile(java.io.File, org.freeplane.core.ui.CaseSensitiveFileNameExtensionFilter):java.io.File	org.freeplane.core.ui.CaseSensitiveFileNameExtensionFilter	0/2	
Move Method	org.freeplane.features.format.FormatController::fixEmptyDataFormatProperty(org.freeplane.core.resources.ResourceController, java.lang.String, java.lang.String):void	org.freeplane.core.resources.ResourceController	0/2	
Move Method	org.freeplane.features.help.FilePropertiesAction::countChildren(org.freeplane.features.map.NodeModel):long	org.freeplane.features.map.NodeModel	0/2	
Move Method	org.freeplane.features.icon.mindmapmode.MIconController.ExtensionCopier::copyIcons(org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/2	
Move Method	org.freeplane.features.map.EncryptionModel::pasteXML(java.lang.String, org.freeplane.features.map.NodeModel, org.freeplane.features.map.MapController):void	org.freeplane.features.map.MapController	0/2	
Move Method	org.freeplane.features.map.MapController::childrenFolded(org.freeplane.features.map.NodeModel):java.util.List<org.freeplane.features.map.NodeModel>	org.freeplane.features.map.NodeModel	0/2	
Move Method	org.freeplane.features.map.NodeRelativePath::path(org.freeplane.features.map.NodeAbsolutePath, int):int[]	org.freeplane.features.map.NodeAbsolutePath	0/2	
Move Method	org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController::addAttribute(org.freeplane.features.map.NodeModel, org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController.TextFragment, boolean):void	org.freeplane.features.map.NodeModel	0/2	
Move Method	org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController::addAttribute(org.freeplane.features.map.NodeModel, org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController.TextFragment, boolean):void	org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController.TextFragment	0/2	
Move Method	org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController::createNode(org.freeplane.features.map.MapModel, org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController.TextFragment):org.freeplane.features.map.NodeModel	org.freeplane.features.map.mindmapmode.clipboard.MMapClipboardController.TextFragment	0/2	
Move Method	org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController.StyleCopier::removeCssData(java.lang.Object, org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/2	
Move Method	org.freeplane.features.spellchecker.mindmapmode.SpellCheckerController::setSpellCheckOptions(org.freeplane.core.resources.ResourceController):void	org.freeplane.core.resources.ResourceController	0/2	
Move Method	org.freeplane.features.styles.LogicalStyleController::conditionalStylesOf(org.freeplane.features.map.NodeModel):org.freeplane.features.styles.ConditionalStyleChecker	org.freeplane.features.map.NodeModel	0/2	
Move Method	org.freeplane.features.styles.MapStyle::normalizeOldFormatTemplateLocation(org.freeplane.features.styles.MapStyleModel):void	org.freeplane.features.styles.MapStyleModel	0/2	
Move Method	org.freeplane.features.url.mindmapmode.MFileManager::openInputStream(java.io.File, java.io.InputStream, org.freeplane.features.url.MapVersionInterpreter):java.io.Reader	org.freeplane.features.url.MapVersionInterpreter	0/2	
Move Method	org.freeplane.main.application.FreeplaneGUIStarter::buildMenus(org.freeplane.features.mode.Controller, java.util.Set<java.lang.String>, java.lang.String, java.lang.String):void	org.freeplane.features.mode.Controller	0/2	
Move Method	org.freeplane.main.application.FreeplaneSplashModern::getVersionText(org.freeplane.core.util.FreeplaneVersion):java.lang.String	org.freeplane.core.util.FreeplaneVersion	0/2	
Move Method	org.freeplane.view.swing.features.filepreview.ViewerController::setZoom(org.freeplane.features.mode.ModeController, org.freeplane.features.map.MapModel, org.freeplane.view.swing.features.filepreview.ExternalResource, float):void	org.freeplane.view.swing.features.filepreview.ExternalResource	0/2	
Move Method	org.freeplane.view.swing.map.CloudHeightCalculator::getAdditionalCloudHeight(org.freeplane.view.swing.map.NodeView):int	org.freeplane.view.swing.map.NodeView	0/2	
Move Method	org.freeplane.view.swing.map.MapView::canHaveSummary(org.freeplane.view.swing.map.NodeView, org.freeplane.view.swing.map.MapView.SelectionDirection):boolean	org.freeplane.view.swing.map.NodeView	0/2	
Move Method	org.freeplane.view.swing.map.MapView::getNextVisibleSiblingAtAnyLevel(org.freeplane.view.swing.map.NodeView, org.freeplane.api.LayoutOrientation, boolean, org.freeplane.view.swing.map.SiblingSelection):org.freeplane.view.swing.map.NodeView	org.freeplane.view.swing.map.NodeView	0/2	
Move Method	org.freeplane.view.swing.map.MindMapLayout::calcXBorderSize(org.freeplane.view.swing.map.MapView):int	org.freeplane.view.swing.map.MapView	0/2	
Move Method	org.freeplane.view.swing.map.MindMapLayout::calcYBorderSize(org.freeplane.view.swing.map.MapView):int	org.freeplane.view.swing.map.MapView	0/2	
Move Method	org.freeplane.view.swing.map.edge.EdgeViewFactory::getEdge(org.freeplane.view.swing.map.NodeView, org.freeplane.view.swing.map.NodeView, java.awt.Component):org.freeplane.view.swing.map.edge.EdgeView	org.freeplane.view.swing.map.NodeView	0/2	
Move Method	org.freeplane.view.swing.ui.mindmapmode.MNodeMotionListener::getRefY(org.freeplane.view.swing.map.NodeView):int	org.freeplane.view.swing.map.NodeView	0/2	
Move Method	org.freeplane.core.ui.menubuilders.generic.EntryAccessor::getTooltipKey(org.freeplane.core.ui.menubuilders.generic.Entry):java.lang.String	org.freeplane.core.ui.menubuilders.generic.Entry	0/1	
Move Method	org.freeplane.core.util.MenuUtils.MenuEntryTreeBuilder::entryIsActionOrIsSubmenu(org.freeplane.core.ui.menubuilders.generic.Entry, javax.swing.tree.DefaultMutableTreeNode):boolean	org.freeplane.core.ui.menubuilders.generic.Entry	0/1	
Move Method	org.freeplane.features.attribute.AttributeController::registerAttributeClipboardController(org.freeplane.features.mode.ModeController):void	org.freeplane.features.mode.ModeController	0/1	
Move Method	org.freeplane.features.attribute.mindmapmode.ImportAttributesDialog::createValueSubTrees(javax.swing.tree.DefaultMutableTreeNode, org.freeplane.features.attribute.AttributeRegistryElement, org.freeplane.features.attribute.AttributeRegistry):void	org.freeplane.features.attribute.AttributeRegistry	0/1	
Move Method	org.freeplane.features.cloud.CloudBuilder::registerAttributeHandlers(org.freeplane.core.io.ReadManager):void	org.freeplane.core.io.ReadManager	0/1	
Move Method	org.freeplane.features.cloud.mindmapmode.MCloudController.ExtensionCopier::copy(org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.commandsearch.MenuStructureIndexer::contributesToPath(org.freeplane.core.ui.menubuilders.generic.Entry):boolean	org.freeplane.core.ui.menubuilders.generic.Entry	0/1	
Move Method	org.freeplane.features.edge.AutomaticEdgeColorHook.Listener::isActiveOnCreation(org.freeplane.features.map.NodeModel):boolean	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.edge.EdgeBuilder::registerAttributeHandlers(org.freeplane.core.io.ReadManager):void	org.freeplane.core.io.ReadManager	0/1	
Move Method	org.freeplane.features.edge.EdgeColorsConfigurationFactory::save(org.freeplane.features.edge.EdgeColorConfiguration):java.lang.String	org.freeplane.features.edge.EdgeColorConfiguration	0/1	
Move Method	org.freeplane.features.edge.mindmapmode.MEdgeController.ExtensionCopier::copy(org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.encrypt.EncryptionController::decrypt(org.freeplane.features.map.EncryptionModel, java.lang.StringBuilder):boolean	org.freeplane.features.map.EncryptionModel	0/1	
Move Method	org.freeplane.features.filter.FindAction::getFindFromText(org.freeplane.features.map.NodeModel):java.lang.String	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.filter.condition.CombinedConditions::conditionIcons(org.freeplane.features.filter.condition.ASelectableCondition, java.awt.FontMetrics):org.freeplane.core.ui.components.ObjectIcon<org.freeplane.features.filter.condition.ASelectableCondition>	org.freeplane.features.filter.condition.ASelectableCondition	0/1	
Move Method	org.freeplane.features.filter.hidden.HideNodeAction::isNotRoot(org.freeplane.features.map.NodeModel):boolean	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.format.ScannerController::parseParser(org.freeplane.n3.nanoxml.XMLElement, java.util.Locale):org.freeplane.features.format.Parser	org.freeplane.n3.nanoxml.XMLElement	0/1	
Move Method	org.freeplane.features.icon.IconController::getTags(org.freeplane.features.map.NodeModel):java.util.List<org.freeplane.features.icon.Tag>	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.icon.TagBuilder::registerAttributeHandlers(org.freeplane.core.io.ReadManager):void	org.freeplane.core.io.ReadManager	0/1	
Move Method	org.freeplane.features.icon.mindmapmode.MIconController::removeAllIcons(org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.icon.mindmapmode.MIconController.ExtensionCopier::removeIcons(org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.layout.mindmapmode.SelectNodeChildrenLayoutAction::applySelectedLayout(org.freeplane.core.resources.components.ButtonSelectorPanel):void	org.freeplane.core.resources.components.ButtonSelectorPanel	0/1	
Move Method	org.freeplane.features.link.ConnectorProperties::changeInclination(int, int, org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel, java.awt.Point):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.link.mindmapmode.MLinkController.MapLinkChanger::insertMapLinksForInsertedSourceNode(org.freeplane.features.link.MapLinks, org.freeplane.features.map.NodeModel):void	org.freeplane.features.link.MapLinks	0/1	
Move Method	org.freeplane.features.map.NodeLevelConditionController::createASelectableCondition(org.freeplane.core.resources.TranslatedObject, java.lang.String, boolean, boolean, boolean):org.freeplane.features.filter.condition.ASelectableCondition	org.freeplane.core.resources.TranslatedObject	0/1	
Move Method	org.freeplane.features.map.clipboard.CopyNodeURIAction::uri(org.freeplane.features.map.NodeModel, java.io.File):java.lang.String	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.mode.mindmapmode.MModeController::addUndoableActor(org.freeplane.core.undo.IActor, org.freeplane.features.map.MapModel):void	org.freeplane.features.map.MapModel	0/1	
Move Method	org.freeplane.features.mode.mindmapmode.MModeController::delayedCommit(org.freeplane.features.map.MapModel):void	org.freeplane.features.map.MapModel	0/1	
Move Method	org.freeplane.features.mode.mindmapmode.MModeController::delayedRollback(org.freeplane.features.map.MapModel):void	org.freeplane.features.map.MapModel	0/1	
Move Method	org.freeplane.features.nodelocation.LocationBuilder::registerAttributeHandlers(org.freeplane.core.io.ReadManager):void	org.freeplane.core.io.ReadManager	0/1	
Move Method	org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController.StyleCopier::removeSizeData(java.lang.Object, org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController.StyleCopier::removeBorderData(java.lang.Object, org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController.StyleCopier::removeStyleData(java.lang.Object, org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.note.NoteController::getNoteText(org.freeplane.features.map.NodeModel):java.lang.String	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.note.mindmapmode.NoteDialogStarter::editNoteInDialog(org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.presentations.mindmapmode.PresentationEditorController::createActionPanel(org.freeplane.features.mode.ModeController):javax.swing.JComponent	org.freeplane.features.mode.ModeController	0/1	
Move Method	org.freeplane.features.presentations.mindmapmode.PresentationPngExporter.ActionInstaller::installActions(org.freeplane.features.mode.ModeController, org.freeplane.features.presentations.mindmapmode.PresentationState):void	org.freeplane.features.mode.ModeController	0/1	
Move Method	org.freeplane.features.styles.MapStyle::loadConditionalStyles(org.freeplane.features.styles.ConditionalStyleModel, org.freeplane.n3.nanoxml.XMLElement):void	org.freeplane.features.styles.ConditionalStyleModel	0/1	
Move Method	org.freeplane.features.styles.MapStyle::saveConditionalStyles(org.freeplane.features.styles.ConditionalStyleModel, org.freeplane.n3.nanoxml.XMLElement, boolean):void	org.freeplane.features.styles.ConditionalStyleModel	0/1	
Move Method	org.freeplane.features.styles.mindmapmode.MLogicalStyleController.ExtensionCopier::copy(org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.text.NodeTextBuilder::registerAttributeHandlers(org.freeplane.core.io.ReadManager):void	org.freeplane.core.io.ReadManager	0/1	
Move Method	org.freeplane.features.text.NodeTextConditionController::createASelectableCondition(java.lang.String, org.freeplane.core.resources.TranslatedObject, java.lang.Object, boolean, boolean, boolean):org.freeplane.features.filter.condition.ASelectableCondition	org.freeplane.core.resources.TranslatedObject	0/1	
Move Method	org.freeplane.features.text.TextController::setIsMinimized(org.freeplane.features.map.NodeModel, boolean):void	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.features.url.UrlManager::getAbsoluteUrl(org.freeplane.features.map.MapModel, java.net.URI):java.net.URL	org.freeplane.features.map.MapModel	0/1	
Move Method	org.freeplane.main.application.LastOpenedList::selectLastVisitedNode(org.freeplane.main.application.LastOpenedList.RecentFile):boolean	org.freeplane.main.application.LastOpenedList.RecentFile	0/1	
Move Method	org.freeplane.view.swing.features.filepreview.ViewerController::deleteViewer(org.freeplane.view.swing.features.filepreview.ExternalResource, org.freeplane.view.swing.map.NodeView):void	org.freeplane.view.swing.map.NodeView	0/1	
Move Method	org.freeplane.view.swing.features.progress.mindmapmode.ProgressFactory::installActions(org.freeplane.features.mode.ModeController):void	org.freeplane.features.mode.ModeController	0/1	
Move Method	org.freeplane.view.swing.features.progress.mindmapmode.ProgressUtilities::hasExternalResource(org.freeplane.features.map.NodeModel):boolean	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.view.swing.features.progress.mindmapmode.ProgressUtilities::hasExtendedProgressIcon(org.freeplane.features.map.NodeModel):boolean	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.view.swing.features.progress.mindmapmode.ProgressUtilities::hasOKIcon(org.freeplane.features.map.NodeModel):boolean	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.view.swing.features.progress.mindmapmode.ProgressUtilities::hasProgressIcons(org.freeplane.features.map.NodeModel):boolean	org.freeplane.features.map.NodeModel	0/1	
Move Method	org.freeplane.view.swing.map.MainView::shouldPaintCloneMarker(org.freeplane.view.swing.map.NodeView):boolean	org.freeplane.view.swing.map.NodeView	0/1	
Move Method	org.freeplane.view.swing.map.MapViewController::printToImage(int, org.freeplane.view.swing.map.MapView, java.awt.Rectangle, int):java.awt.image.BufferedImage	org.freeplane.view.swing.map.MapView	0/1	
Move Method	org.freeplane.view.swing.map.ZoomableLabelUI::updateRendererOnPropertyChange(org.freeplane.view.swing.map.ZoomableLabel, java.lang.String):void	org.freeplane.view.swing.map.ZoomableLabel	0/1	
Move Method	org.freeplane.view.swing.map.attribute.AttributeTableCellRenderer::isAttributeManaged(org.freeplane.view.swing.map.attribute.AttributeTable, int):boolean	org.freeplane.view.swing.map.attribute.AttributeTable	0/1	
Move Method	org.freeplane.view.swing.map.attribute.AttributeTableCellRenderer::isAttributeHighlighted(org.freeplane.view.swing.map.attribute.AttributeTable, int):boolean	org.freeplane.view.swing.map.attribute.AttributeTable	0/1	
Move Method	org.freeplane.view.swing.ui.mindmapmode.MNodeMotionListener::getRefX(org.freeplane.view.swing.map.NodeView):int	org.freeplane.view.swing.map.NodeView	0/1	
Move Method	org.freeplane.features.nodestyle.NodeStyleBuilder::writeAttributes(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.nodestyle.NodeStyleModel, boolean):void	org.freeplane.features.nodestyle.NodeStyleModel	1/7	
Move Method	org.freeplane.features.nodestyle.NodeStyleBuilder::writeAttributes(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.nodestyle.NodeBorderModel, boolean):void	org.freeplane.features.nodestyle.NodeBorderModel	1/6	
Move Method	org.freeplane.features.nodestyle.NodeStyleBuilder::writeAttributes(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.nodestyle.NodeBorderModel, boolean):void	org.freeplane.features.nodestyle.NodeStyleController	1/6	
Move Method	org.freeplane.view.swing.map.NodeViewFactory::updateDetails(org.freeplane.view.swing.map.NodeView, int, int, org.freeplane.view.swing.map.UpdateCause):void	org.freeplane.view.swing.map.NodeView	1/6	
Move Method	org.freeplane.features.nodestyle.NodeStyleBuilder::writeContent(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.nodestyle.NodeStyleModel, boolean):void	org.freeplane.features.nodestyle.NodeStyleController	1/5	
Move Method	org.freeplane.features.nodestyle.NodeStyleBuilder::writeContent(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.nodestyle.NodeStyleModel, boolean):void	org.freeplane.features.nodestyle.NodeStyleModel	1/5	
Move Method	org.freeplane.view.swing.map.ZoomableLabelUI::paintIcon(java.awt.Graphics, org.freeplane.view.swing.map.ZoomableLabel):void	org.freeplane.view.swing.map.ZoomableLabel	1/5	
Move Method	org.freeplane.features.edge.EdgeBuilder::writeContent(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.edge.EdgeModel, boolean):void	org.freeplane.features.edge.EdgeController	1/4	
Move Method	org.freeplane.main.addons.AddOnsController::save(org.freeplane.main.addons.AddOnProperties):void	org.freeplane.main.addons.AddOnProperties	1/4	
Move Method	org.freeplane.view.swing.map.NodeView::updateFilterResults(org.freeplane.features.map.NodeModel):void	org.freeplane.view.swing.map.MapView	1/4	
Move Method	org.freeplane.view.swing.map.NodeViewFactory::updateNewView(org.freeplane.view.swing.map.NodeView):void	org.freeplane.view.swing.map.NodeView	1/4	
Move Method	org.freeplane.features.encrypt.mindmapmode.MEncryptionController::removeEncryption(org.freeplane.features.map.NodeModel, org.freeplane.features.encrypt.PasswordStrategy):void	org.freeplane.features.map.NodeModel	1/3	
Move Method	org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController::createOwnStyleModel(org.freeplane.features.map.NodeModel):org.freeplane.features.nodestyle.NodeStyleModel	org.freeplane.features.map.NodeModel	1/3	
Move Method	org.freeplane.features.nodestyle.mindmapmode.MNodeStyleController::createOwnSizeModel(org.freeplane.features.map.NodeModel):org.freeplane.features.nodestyle.NodeSizeModel	org.freeplane.features.map.NodeModel	1/3	
Move Method	org.freeplane.features.note.mindmapmode.MNoteController::setNote(org.freeplane.features.map.NodeModel, org.freeplane.features.note.NoteModel, org.freeplane.features.note.NoteModel, java.lang.String):void	org.freeplane.features.map.NodeModel	1/3	
Move Method	org.freeplane.features.styles.AutomaticLayoutController::getStyle(org.freeplane.features.map.NodeModel, org.freeplane.features.styles.AutomaticLayout):org.freeplane.features.styles.IStyle	org.freeplane.features.map.NodeModel	1/3	
Move Method	org.freeplane.features.text.mindmapmode.MTextController::setDetails(org.freeplane.features.map.NodeModel, org.freeplane.features.text.DetailModel, org.freeplane.features.text.DetailModel, java.lang.String):void	org.freeplane.features.map.NodeModel	1/3	
Move Method	org.freeplane.view.swing.features.FitToPage::zoom():void	org.freeplane.view.swing.map.MapView	1/3	
Move Method	org.freeplane.view.swing.map.MainView::updateFont(org.freeplane.view.swing.map.NodeView):void	org.freeplane.view.swing.map.NodeView	1/3	
Move Method	org.freeplane.view.swing.map.MainView::updateCss(org.freeplane.view.swing.map.NodeView):void	org.freeplane.view.swing.map.NodeView	1/3	
Move Method	org.freeplane.view.swing.map.MainView::updateHorizontalTextAlignment(org.freeplane.view.swing.map.NodeView):void	org.freeplane.view.swing.map.NodeView	1/3	
Move Method	org.freeplane.view.swing.map.MainView::updateTextWritingDirection(org.freeplane.view.swing.map.NodeView):void	org.freeplane.view.swing.map.NodeView	1/3	
Move Method	org.freeplane.view.swing.map.MainViewPainter::getMainViewHeightWithFoldingMark(boolean):int	org.freeplane.view.swing.map.MainView	1/3	
Move Method	org.freeplane.core.ui.menubuilders.menu.JMenuItemBuilder::setTranslationKey(org.freeplane.core.ui.menubuilders.generic.Entry, java.awt.Component):void	org.freeplane.core.ui.menubuilders.generic.EntryAccessor	1/2	
Move Method	org.freeplane.core.util.MenuUtils.MenuEntryTreeBuilder::menuEntry(org.freeplane.core.ui.AFreeplaneAction):org.freeplane.core.util.MenuUtils.MenuEntry	org.freeplane.core.ui.AFreeplaneAction	1/2	
Move Method	org.freeplane.features.edge.EdgeColorsConfigurationFactory::createNewConfiguration(org.freeplane.features.map.MapModel):org.freeplane.features.edge.EdgeColorConfiguration	org.freeplane.features.mode.ModeController	1/2	
Move Method	org.freeplane.features.export.mindmapmode.XsltExportEngineFactory::addXsltFile(java.lang.String[], java.lang.String, java.io.File):void	org.freeplane.features.export.mindmapmode.ExportController	1/2	
Move Method	org.freeplane.features.filter.FilterController::loadConditions(org.freeplane.features.filter.FilterConditions, java.lang.String, boolean):void	org.freeplane.features.filter.FilterConditions	1/2	
Move Method	org.freeplane.features.format.ScannerController::addParsersForStandardFormats():void	org.freeplane.features.format.Scanner	1/2	
Move Method	org.freeplane.features.icon.TagCondition::checkShortTag(org.freeplane.features.icon.Tag, java.lang.String):boolean	org.freeplane.features.icon.Tag	1/2	
Move Method	org.freeplane.features.icon.TagCondition::checkCategorizedTag(org.freeplane.features.icon.Tag, java.lang.String):boolean	org.freeplane.features.icon.Tag	1/2	
Move Method	org.freeplane.features.icon.mindmapmode.TagEditor::createTagIfAbsent(java.lang.String, boolean):org.freeplane.features.icon.Tag	org.freeplane.features.icon.TagCategories	1/2	
Move Method	org.freeplane.features.link.LinkController::addIconsBasedOnLinkType(org.freeplane.core.util.Hyperlink, org.freeplane.core.ui.components.MultipleImageIcon, org.freeplane.features.map.NodeModel, org.freeplane.features.styles.LogicalStyleController.StyleOption):void	org.freeplane.core.ui.components.MultipleImageIcon	1/2	
Move Method	org.freeplane.features.link.NodeLinks::replaceMapLinksForDeletedSourceNode(org.freeplane.features.link.MapLinks, org.freeplane.features.map.NodeModel, org.freeplane.features.map.NodeModel):void	org.freeplane.features.link.MapLinks	1/2	
Move Method	org.freeplane.features.map.MapController::fireMapCreated(org.freeplane.features.map.MapModel):void	org.freeplane.features.map.MapModel	1/2	
Move Method	org.freeplane.features.map.NodeModel::init(java.lang.Object):void	org.freeplane.features.map.SharedNodeData	1/2	
Move Method	org.freeplane.features.map.NodeWriter::writeReferenceNodeId(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	1/2	
Move Method	org.freeplane.features.nodestyle.NodeStyleBuilder::writeAttributes(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.nodestyle.NodeSizeModel, boolean):void	org.freeplane.features.nodestyle.NodeSizeModel	1/2	
Move Method	org.freeplane.features.nodestyle.NodeStyleBuilder::writeAttributes(org.freeplane.core.io.ITreeWriter, org.freeplane.features.map.NodeModel, org.freeplane.features.nodestyle.NodeSizeModel, boolean):void	org.freeplane.features.nodestyle.NodeStyleController	1/2	
Move Method	org.freeplane.features.styles.MapStyleModel::setConditionalStylesIfEmpty(org.freeplane.features.styles.MapStyleModel):void	org.freeplane.features.styles.ConditionalStyleModel	1/2	
Move Method	org.freeplane.features.url.mindmapmode.MFileManager::saveInternal(org.freeplane.features.map.mindmapmode.MMapModel, java.io.File, boolean):boolean	org.freeplane.features.map.mindmapmode.MMapModel	1/2	
Move Method	org.freeplane.view.swing.map.ContentSizeCalculator::calculateContentSize(org.freeplane.view.swing.map.NodeView):java.awt.Dimension	org.freeplane.view.swing.map.NodeView	1/2	
Move Method	org.freeplane.view.swing.map.VerticalNodeViewLayoutStrategy::getContentTop(org.freeplane.view.swing.map.NodeViewLayoutHelper):int	org.freeplane.view.swing.map.NodeViewLayoutHelper	1/2	
Move Method	org.freeplane.view.swing.map.VerticalNodeViewLayoutStrategy::calculateSummaryChildVerticalPosition(int, int, org.freeplane.view.swing.map.NodeViewLayoutHelper, int):int	org.freeplane.view.swing.map.NodeViewLayoutHelper	1/2	
Move Method	org.freeplane.view.swing.map.overview.MapOverviewImage::createOverviewImage(java.awt.Rectangle, java.awt.Rectangle, double):java.awt.image.BufferedImage	org.freeplane.view.swing.map.MapView	1/2	
Move Method	org.freeplane.view.swing.ui.mindmapmode.MNodeDropListener::moveNodes(org.freeplane.features.map.mindmapmode.MMapController, org.freeplane.features.map.NodeModel, java.awt.datatransfer.Transferable, org.freeplane.features.map.mindmapmode.InsertionRelation, boolean):void	org.freeplane.features.map.mindmapmode.MMapController	1/2	
Move Method	org.freeplane.features.encrypt.EncryptionController::encrypt(org.freeplane.features.map.NodeModel, org.freeplane.features.encrypt.PasswordStrategy):void	org.freeplane.features.map.NodeModel	2/4	
Move Method	org.freeplane.view.swing.map.DrawableShape::getFillColor(org.freeplane.view.swing.map.NodeView):java.awt.Color	org.freeplane.view.swing.map.NodeView	2/4	
Move Method	org.freeplane.view.swing.map.MainViewPainter::paintFoldingMark(org.freeplane.view.swing.map.NodeView, java.awt.Graphics2D):void	org.freeplane.view.swing.map.MainView	2/4	
Move Method	org.freeplane.core.ui.menubuilders.generic.EntryAccessor::getTextKey(org.freeplane.core.ui.menubuilders.generic.Entry):java.lang.String	org.freeplane.core.ui.menubuilders.generic.Entry	2/3	
Move Method	org.freeplane.features.attribute.AttributeBuilder::save(org.freeplane.features.map.NodeModel, org.freeplane.features.attribute.NodeAttributeTableModel, org.freeplane.core.io.ITreeWriter):void	org.freeplane.features.attribute.NodeAttributeTableModel	2/3	
Move Method	org.freeplane.features.filter.Filter::accepts(org.freeplane.features.map.NodeModel, int):boolean	org.freeplane.features.map.NodeModel	2/3	
Move Method	org.freeplane.features.icon.mindmapmode.TagCategoryEditor::setTagColor(java.awt.Color):void	org.freeplane.features.icon.TagCategories	2/3	
Move Method	org.freeplane.features.map.mindmapmode.MMapController::setProperty(org.freeplane.features.map.NodeModel, java.lang.Class<? extends org.freeplane.core.extension.IExtension>, T):void	org.freeplane.features.map.NodeModel	2/3	
Move Method	org.freeplane.features.styles.MapStyleModel::createNodeStyleMap(org.freeplane.features.map.NodeModel):void	org.freeplane.features.map.NodeModel	2/3	
Move Method	org.freeplane.view.swing.features.FitToPage::scroll():void	org.freeplane.view.swing.map.MapView	2/3	
Move Method	org.freeplane.view.swing.map.attribute.AttributeView::startEditingTable():void	org.freeplane.view.swing.map.attribute.AttributeTable	2/3	
Move Method	org.freeplane.view.swing.ui.UserInputListenerFactory::outputUnusedActions():void	org.freeplane.features.mode.ModeController	2/3	
