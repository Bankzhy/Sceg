com.badlogic.gdx.graphics.g2d.PolygonSprite	[com.badlogic.gdx.graphics.g2d.PolygonSprite::com.badlogic.gdx.graphics.g2d.PolygonRegion region, com.badlogic.gdx.graphics.g2d.PolygonSprite::draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::float originX, com.badlogic.gdx.graphics.g2d.PolygonSprite::float originY, com.badlogic.gdx.graphics.g2d.PolygonSprite::setOrigin(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::float x, com.badlogic.gdx.graphics.g2d.PolygonSprite::float y, com.badlogic.gdx.graphics.g2d.PolygonSprite::float width, com.badlogic.gdx.graphics.g2d.PolygonSprite::float height, com.badlogic.gdx.graphics.g2d.PolygonSprite::float rotation, com.badlogic.gdx.graphics.g2d.PolygonSprite::setRotation(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::rotate(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setBounds(float, float, float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setSize(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translateX(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translate(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translateY(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::set(com.badlogic.gdx.graphics.g2d.PolygonSprite):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::getVertices():float[], com.badlogic.gdx.graphics.g2d.PolygonSprite::float scaleX, com.badlogic.gdx.graphics.g2d.PolygonSprite::float scaleY, com.badlogic.gdx.graphics.g2d.PolygonSprite::float[] vertices, com.badlogic.gdx.graphics.g2d.PolygonSprite::com.badlogic.gdx.graphics.Color color, com.badlogic.gdx.graphics.g2d.PolygonSprite::draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::boolean dirty, com.badlogic.gdx.graphics.g2d.PolygonSprite::setColor(com.badlogic.gdx.graphics.Color):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setColor(float, float, float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::getPackedColor():com.badlogic.gdx.graphics.Color, com.badlogic.gdx.graphics.g2d.PolygonSprite::setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setScale(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setScale(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::scale(float):void]
com.badlogic.gdx.graphics.g2d.PolygonSprite	[com.badlogic.gdx.graphics.g2d.PolygonSprite::com.badlogic.gdx.graphics.g2d.PolygonRegion region, com.badlogic.gdx.graphics.g2d.PolygonSprite::draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::float originX, com.badlogic.gdx.graphics.g2d.PolygonSprite::float originY, com.badlogic.gdx.graphics.g2d.PolygonSprite::setOrigin(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::float x, com.badlogic.gdx.graphics.g2d.PolygonSprite::float y, com.badlogic.gdx.graphics.g2d.PolygonSprite::float width, com.badlogic.gdx.graphics.g2d.PolygonSprite::float height, com.badlogic.gdx.graphics.g2d.PolygonSprite::float rotation, com.badlogic.gdx.graphics.g2d.PolygonSprite::setRotation(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::rotate(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setBounds(float, float, float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setSize(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translateX(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translate(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translateY(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::set(com.badlogic.gdx.graphics.g2d.PolygonSprite):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::getVertices():float[], com.badlogic.gdx.graphics.g2d.PolygonSprite::float scaleX, com.badlogic.gdx.graphics.g2d.PolygonSprite::float scaleY, com.badlogic.gdx.graphics.g2d.PolygonSprite::float[] vertices, com.badlogic.gdx.graphics.g2d.PolygonSprite::com.badlogic.gdx.graphics.Color color, com.badlogic.gdx.graphics.g2d.PolygonSprite::draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::boolean dirty, com.badlogic.gdx.graphics.g2d.PolygonSprite::setColor(com.badlogic.gdx.graphics.Color):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setColor(float, float, float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::getPackedColor():com.badlogic.gdx.graphics.Color, com.badlogic.gdx.graphics.g2d.PolygonSprite::setRegion(com.badlogic.gdx.graphics.g2d.PolygonRegion):void]
com.badlogic.gdx.graphics.g2d.PolygonSprite	[com.badlogic.gdx.graphics.g2d.PolygonSprite::float originX, com.badlogic.gdx.graphics.g2d.PolygonSprite::float originY, com.badlogic.gdx.graphics.g2d.PolygonSprite::setOrigin(float, float):void]
com.badlogic.gdx.graphics.g2d.PolygonSprite	[com.badlogic.gdx.graphics.g2d.PolygonSprite::com.badlogic.gdx.graphics.g2d.PolygonRegion region, com.badlogic.gdx.graphics.g2d.PolygonSprite::draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::float originX, com.badlogic.gdx.graphics.g2d.PolygonSprite::float originY, com.badlogic.gdx.graphics.g2d.PolygonSprite::setOrigin(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::float x, com.badlogic.gdx.graphics.g2d.PolygonSprite::float y, com.badlogic.gdx.graphics.g2d.PolygonSprite::float width, com.badlogic.gdx.graphics.g2d.PolygonSprite::float height, com.badlogic.gdx.graphics.g2d.PolygonSprite::float rotation, com.badlogic.gdx.graphics.g2d.PolygonSprite::setRotation(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::rotate(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setBounds(float, float, float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::setSize(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translateX(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translate(float, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::translateY(float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::set(com.badlogic.gdx.graphics.g2d.PolygonSprite):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::getVertices():float[], com.badlogic.gdx.graphics.g2d.PolygonSprite::float scaleX, com.badlogic.gdx.graphics.g2d.PolygonSprite::float scaleY, com.badlogic.gdx.graphics.g2d.PolygonSprite::float[] vertices, com.badlogic.gdx.graphics.g2d.PolygonSprite::com.badlogic.gdx.graphics.Color color, com.badlogic.gdx.graphics.g2d.PolygonSprite::draw(com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch, float):void, com.badlogic.gdx.graphics.g2d.PolygonSprite::boolean dirty]
com.badlogic.gdx.math.Polyline	[com.badlogic.gdx.math.Polyline::float[] localVertices, com.badlogic.gdx.math.Polyline::setVertices(float[]):void, com.badlogic.gdx.math.Polyline::float length, com.badlogic.gdx.math.Polyline::getLength():float, com.badlogic.gdx.math.Polyline::boolean calculateLength, com.badlogic.gdx.math.Polyline::calculateLength():void, com.badlogic.gdx.math.Polyline::float scaleX, com.badlogic.gdx.math.Polyline::float scaleY, com.badlogic.gdx.math.Polyline::boolean calculateScaledLength, com.badlogic.gdx.math.Polyline::calculateScaledLength():void, com.badlogic.gdx.math.Polyline::float scaledLength, com.badlogic.gdx.math.Polyline::getScaledLength():float, com.badlogic.gdx.math.Polyline::setScale(float, float):void, com.badlogic.gdx.math.Polyline::scale(float):void, com.badlogic.gdx.math.Polyline::dirty():void, com.badlogic.gdx.math.Polyline::float[] worldVertices, com.badlogic.gdx.math.Polyline::float originX, com.badlogic.gdx.math.Polyline::float originY, com.badlogic.gdx.math.Polyline::setOrigin(float, float):void, com.badlogic.gdx.math.Polyline::getTransformedVertices():float[], com.badlogic.gdx.math.Polyline::float x, com.badlogic.gdx.math.Polyline::float y, com.badlogic.gdx.math.Polyline::setPosition(float, float):void, com.badlogic.gdx.math.Polyline::translate(float, float):void, com.badlogic.gdx.math.Polyline::boolean dirty, com.badlogic.gdx.math.Polyline::float rotation, com.badlogic.gdx.math.Polyline::setRotation(float):void, com.badlogic.gdx.math.Polyline::rotate(float):void]
com.badlogic.gdx.math.Polyline	[com.badlogic.gdx.math.Polyline::float x, com.badlogic.gdx.math.Polyline::float y, com.badlogic.gdx.math.Polyline::setPosition(float, float):void, com.badlogic.gdx.math.Polyline::translate(float, float):void, com.badlogic.gdx.math.Polyline::boolean dirty, com.badlogic.gdx.math.Polyline::float rotation, com.badlogic.gdx.math.Polyline::setRotation(float):void, com.badlogic.gdx.math.Polyline::rotate(float):void]
com.badlogic.gdx.math.Polyline	[com.badlogic.gdx.math.Polyline::float x, com.badlogic.gdx.math.Polyline::float y, com.badlogic.gdx.math.Polyline::setPosition(float, float):void, com.badlogic.gdx.math.Polyline::translate(float, float):void, com.badlogic.gdx.math.Polyline::boolean dirty]
com.badlogic.gdx.math.Polyline	[com.badlogic.gdx.math.Polyline::float[] localVertices, com.badlogic.gdx.math.Polyline::setVertices(float[]):void, com.badlogic.gdx.math.Polyline::float length, com.badlogic.gdx.math.Polyline::getLength():float, com.badlogic.gdx.math.Polyline::boolean calculateLength, com.badlogic.gdx.math.Polyline::calculateLength():void, com.badlogic.gdx.math.Polyline::float scaleX, com.badlogic.gdx.math.Polyline::float scaleY, com.badlogic.gdx.math.Polyline::boolean calculateScaledLength, com.badlogic.gdx.math.Polyline::calculateScaledLength():void, com.badlogic.gdx.math.Polyline::float scaledLength, com.badlogic.gdx.math.Polyline::getScaledLength():float, com.badlogic.gdx.math.Polyline::setScale(float, float):void, com.badlogic.gdx.math.Polyline::scale(float):void, com.badlogic.gdx.math.Polyline::dirty():void]
com.badlogic.gdx.math.Polyline	[com.badlogic.gdx.math.Polyline::float[] localVertices, com.badlogic.gdx.math.Polyline::setVertices(float[]):void, com.badlogic.gdx.math.Polyline::float length, com.badlogic.gdx.math.Polyline::getLength():float, com.badlogic.gdx.math.Polyline::boolean calculateLength, com.badlogic.gdx.math.Polyline::calculateLength():void]
com.badlogic.gdx.math.Polyline	[com.badlogic.gdx.math.Polyline::float length, com.badlogic.gdx.math.Polyline::getLength():float, com.badlogic.gdx.math.Polyline::boolean calculateLength, com.badlogic.gdx.math.Polyline::calculateLength():void]
com.badlogic.gdx.utils.XmlReader.Element	[com.badlogic.gdx.utils.XmlReader.Element::java.lang.String name, com.badlogic.gdx.utils.XmlReader.Element::com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element> children, com.badlogic.gdx.utils.XmlReader.Element::getChildCount():int, com.badlogic.gdx.utils.XmlReader.Element::getChild(int):com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element::getChildByName(java.lang.String):com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element::getChildByNameRecursive(java.lang.String):com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element::getChildrenByName(java.lang.String):com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>, com.badlogic.gdx.utils.XmlReader.Element::getChildrenByNameRecursively(java.lang.String, com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>):void, com.badlogic.gdx.utils.XmlReader.Element::hasChild(java.lang.String):boolean, com.badlogic.gdx.utils.XmlReader.Element::hasChildRecursive(java.lang.String):boolean, com.badlogic.gdx.utils.XmlReader.Element::addChild(com.badlogic.gdx.utils.XmlReader.Element):void, com.badlogic.gdx.utils.XmlReader.Element::replaceChild(com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element):void, com.badlogic.gdx.utils.XmlReader.Element::removeChild(int):void, com.badlogic.gdx.utils.XmlReader.Element::removeChild(com.badlogic.gdx.utils.XmlReader.Element):void, com.badlogic.gdx.utils.XmlReader.Element::toString(java.lang.String):java.lang.String, com.badlogic.gdx.utils.XmlReader.Element::com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.String> attributes, com.badlogic.gdx.utils.XmlReader.Element::getAttribute(java.lang.String):java.lang.String, com.badlogic.gdx.utils.XmlReader.Element::getAttribute(java.lang.String, java.lang.String):java.lang.String, com.badlogic.gdx.utils.XmlReader.Element::get(java.lang.String, java.lang.String):java.lang.String, com.badlogic.gdx.utils.XmlReader.Element::hasAttribute(java.lang.String):boolean, com.badlogic.gdx.utils.XmlReader.Element::setAttribute(java.lang.String, java.lang.String):void, com.badlogic.gdx.utils.XmlReader.Element::getFloatAttribute(java.lang.String, float):float, com.badlogic.gdx.utils.XmlReader.Element::getIntAttribute(java.lang.String, int):int, com.badlogic.gdx.utils.XmlReader.Element::getBooleanAttribute(java.lang.String, boolean):boolean, com.badlogic.gdx.utils.XmlReader.Element::getFloatAttribute(java.lang.String):float, com.badlogic.gdx.utils.XmlReader.Element::getIntAttribute(java.lang.String):int, com.badlogic.gdx.utils.XmlReader.Element::getBooleanAttribute(java.lang.String):boolean, com.badlogic.gdx.utils.XmlReader.Element::java.lang.String text, com.badlogic.gdx.utils.XmlReader.Element::getChildrenByNameRecursively(java.lang.String):com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>]
com.badlogic.gdx.utils.XmlReader.Element	[com.badlogic.gdx.utils.XmlReader.Element::java.lang.String name, com.badlogic.gdx.utils.XmlReader.Element::com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element> children, com.badlogic.gdx.utils.XmlReader.Element::getChildCount():int, com.badlogic.gdx.utils.XmlReader.Element::getChild(int):com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element::getChildByName(java.lang.String):com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element::getChildByNameRecursive(java.lang.String):com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element::getChildrenByName(java.lang.String):com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>, com.badlogic.gdx.utils.XmlReader.Element::getChildrenByNameRecursively(java.lang.String, com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>):void, com.badlogic.gdx.utils.XmlReader.Element::hasChild(java.lang.String):boolean, com.badlogic.gdx.utils.XmlReader.Element::hasChildRecursive(java.lang.String):boolean, com.badlogic.gdx.utils.XmlReader.Element::addChild(com.badlogic.gdx.utils.XmlReader.Element):void, com.badlogic.gdx.utils.XmlReader.Element::replaceChild(com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.utils.XmlReader.Element):void, com.badlogic.gdx.utils.XmlReader.Element::removeChild(int):void, com.badlogic.gdx.utils.XmlReader.Element::removeChild(com.badlogic.gdx.utils.XmlReader.Element):void, com.badlogic.gdx.utils.XmlReader.Element::toString(java.lang.String):java.lang.String]
com.badlogic.gdx.utils.XmlReader.Element	[com.badlogic.gdx.utils.XmlReader.Element::com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.String> attributes, com.badlogic.gdx.utils.XmlReader.Element::getAttribute(java.lang.String):java.lang.String, com.badlogic.gdx.utils.XmlReader.Element::getAttribute(java.lang.String, java.lang.String):java.lang.String, com.badlogic.gdx.utils.XmlReader.Element::get(java.lang.String, java.lang.String):java.lang.String, com.badlogic.gdx.utils.XmlReader.Element::hasAttribute(java.lang.String):boolean, com.badlogic.gdx.utils.XmlReader.Element::setAttribute(java.lang.String, java.lang.String):void, com.badlogic.gdx.utils.XmlReader.Element::getFloatAttribute(java.lang.String, float):float, com.badlogic.gdx.utils.XmlReader.Element::getIntAttribute(java.lang.String, int):int, com.badlogic.gdx.utils.XmlReader.Element::getBooleanAttribute(java.lang.String, boolean):boolean, com.badlogic.gdx.utils.XmlReader.Element::getFloatAttribute(java.lang.String):float, com.badlogic.gdx.utils.XmlReader.Element::getIntAttribute(java.lang.String):int, com.badlogic.gdx.utils.XmlReader.Element::getBooleanAttribute(java.lang.String):boolean]
com.badlogic.gdx.utils.PerformanceCounter	[com.badlogic.gdx.utils.PerformanceCounter::long startTime, com.badlogic.gdx.utils.PerformanceCounter::boolean valid, com.badlogic.gdx.utils.PerformanceCounter::float current, com.badlogic.gdx.utils.PerformanceCounter::start():void, com.badlogic.gdx.utils.PerformanceCounter::stop():void, com.badlogic.gdx.utils.PerformanceCounter::com.badlogic.gdx.math.FloatCounter time, com.badlogic.gdx.utils.PerformanceCounter::com.badlogic.gdx.math.FloatCounter load, com.badlogic.gdx.utils.PerformanceCounter::reset():void, com.badlogic.gdx.utils.PerformanceCounter::tick(float):void, com.badlogic.gdx.utils.PerformanceCounter::long lastTick, com.badlogic.gdx.utils.PerformanceCounter::tick():void]
com.badlogic.gdx.utils.PerformanceCounter	[com.badlogic.gdx.utils.PerformanceCounter::long startTime, com.badlogic.gdx.utils.PerformanceCounter::boolean valid, com.badlogic.gdx.utils.PerformanceCounter::float current, com.badlogic.gdx.utils.PerformanceCounter::start():void, com.badlogic.gdx.utils.PerformanceCounter::stop():void]
com.badlogic.gdx.utils.PerformanceCounter	[com.badlogic.gdx.utils.PerformanceCounter::long startTime, com.badlogic.gdx.utils.PerformanceCounter::boolean valid, com.badlogic.gdx.utils.PerformanceCounter::float current, com.badlogic.gdx.utils.PerformanceCounter::start():void, com.badlogic.gdx.utils.PerformanceCounter::stop():void, com.badlogic.gdx.utils.PerformanceCounter::com.badlogic.gdx.math.FloatCounter time, com.badlogic.gdx.utils.PerformanceCounter::com.badlogic.gdx.math.FloatCounter load, com.badlogic.gdx.utils.PerformanceCounter::reset():void, com.badlogic.gdx.utils.PerformanceCounter::tick(float):void]
com.badlogic.gdx.graphics.g2d.NinePatch	[com.badlogic.gdx.graphics.g2d.NinePatch::float leftWidth, com.badlogic.gdx.graphics.g2d.NinePatch::float rightWidth, com.badlogic.gdx.graphics.g2d.NinePatch::float middleWidth, com.badlogic.gdx.graphics.g2d.NinePatch::float middleHeight, com.badlogic.gdx.graphics.g2d.NinePatch::float topHeight, com.badlogic.gdx.graphics.g2d.NinePatch::float bottomHeight, com.badlogic.gdx.graphics.g2d.NinePatch::getTotalWidth():float, com.badlogic.gdx.graphics.g2d.NinePatch::getTotalHeight():float]
com.badlogic.gdx.graphics.g2d.NinePatch	[com.badlogic.gdx.graphics.g2d.NinePatch::com.badlogic.gdx.graphics.Texture texture, com.badlogic.gdx.graphics.g2d.NinePatch::float[] vertices, com.badlogic.gdx.graphics.g2d.NinePatch::int idx, com.badlogic.gdx.graphics.g2d.NinePatch::set(int, float, float, float, float, float):void, com.badlogic.gdx.graphics.g2d.NinePatch::draw(com.badlogic.gdx.graphics.g2d.Batch, float, float, float, float):void, com.badlogic.gdx.graphics.g2d.NinePatch::draw(com.badlogic.gdx.graphics.g2d.Batch, float, float, float, float, float, float, float, float, float):void, com.badlogic.gdx.graphics.g2d.NinePatch::add(com.badlogic.gdx.graphics.g2d.TextureRegion, boolean, boolean):int]
com.badlogic.gdx.input.NativeInputConfiguration	[com.badlogic.gdx.input.NativeInputConfiguration::com.badlogic.gdx.Input.OnscreenKeyboardType type, com.badlogic.gdx.input.NativeInputConfiguration::setType(com.badlogic.gdx.Input.OnscreenKeyboardType):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::validate():void, com.badlogic.gdx.input.NativeInputConfiguration::com.badlogic.gdx.input.TextInputWrapper textInputWrapper, com.badlogic.gdx.input.NativeInputConfiguration::setTextInputWrapper(com.badlogic.gdx.input.TextInputWrapper):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::boolean isMultiLine, com.badlogic.gdx.input.NativeInputConfiguration::setMultiLine(boolean):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::java.lang.String placeholder, com.badlogic.gdx.input.NativeInputConfiguration::setPlaceholder(java.lang.String):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::boolean showPasswordButton, com.badlogic.gdx.input.NativeInputConfiguration::setShowPasswordButton(boolean):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::java.lang.String[] autoComplete, com.badlogic.gdx.input.NativeInputConfiguration::setAutoComplete(java.lang.String[]):com.badlogic.gdx.input.NativeInputConfiguration]
com.badlogic.gdx.input.NativeInputConfiguration	[com.badlogic.gdx.input.NativeInputConfiguration::com.badlogic.gdx.Input.OnscreenKeyboardType type, com.badlogic.gdx.input.NativeInputConfiguration::setType(com.badlogic.gdx.Input.OnscreenKeyboardType):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::validate():void, com.badlogic.gdx.input.NativeInputConfiguration::com.badlogic.gdx.input.TextInputWrapper textInputWrapper, com.badlogic.gdx.input.NativeInputConfiguration::setTextInputWrapper(com.badlogic.gdx.input.TextInputWrapper):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::boolean isMultiLine, com.badlogic.gdx.input.NativeInputConfiguration::setMultiLine(boolean):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::java.lang.String placeholder, com.badlogic.gdx.input.NativeInputConfiguration::setPlaceholder(java.lang.String):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::boolean showPasswordButton, com.badlogic.gdx.input.NativeInputConfiguration::setShowPasswordButton(boolean):com.badlogic.gdx.input.NativeInputConfiguration]
com.badlogic.gdx.input.NativeInputConfiguration	[com.badlogic.gdx.input.NativeInputConfiguration::com.badlogic.gdx.Input.OnscreenKeyboardType type, com.badlogic.gdx.input.NativeInputConfiguration::setType(com.badlogic.gdx.Input.OnscreenKeyboardType):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::validate():void, com.badlogic.gdx.input.NativeInputConfiguration::com.badlogic.gdx.input.TextInputWrapper textInputWrapper, com.badlogic.gdx.input.NativeInputConfiguration::setTextInputWrapper(com.badlogic.gdx.input.TextInputWrapper):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::boolean isMultiLine, com.badlogic.gdx.input.NativeInputConfiguration::setMultiLine(boolean):com.badlogic.gdx.input.NativeInputConfiguration, com.badlogic.gdx.input.NativeInputConfiguration::java.lang.String placeholder, com.badlogic.gdx.input.NativeInputConfiguration::setPlaceholder(java.lang.String):com.badlogic.gdx.input.NativeInputConfiguration]
com.badlogic.gdx.utils.IntFloatMap	[com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Entries entries1, com.badlogic.gdx.utils.IntFloatMap::entries():com.badlogic.gdx.utils.IntFloatMap.Entries, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Entries entries2, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Values values1, com.badlogic.gdx.utils.IntFloatMap::values():com.badlogic.gdx.utils.IntFloatMap.Values, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Values values2, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Keys keys1, com.badlogic.gdx.utils.IntFloatMap::keys():com.badlogic.gdx.utils.IntFloatMap.Keys, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Keys keys2]
com.badlogic.gdx.utils.IntFloatMap	[com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Entries entries1, com.badlogic.gdx.utils.IntFloatMap::entries():com.badlogic.gdx.utils.IntFloatMap.Entries, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Entries entries2, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Values values1, com.badlogic.gdx.utils.IntFloatMap::values():com.badlogic.gdx.utils.IntFloatMap.Values, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Values values2]
com.badlogic.gdx.utils.IntFloatMap	[com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Keys keys1, com.badlogic.gdx.utils.IntFloatMap::keys():com.badlogic.gdx.utils.IntFloatMap.Keys, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Keys keys2]
com.badlogic.gdx.utils.IntFloatMap	[com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Entries entries1, com.badlogic.gdx.utils.IntFloatMap::entries():com.badlogic.gdx.utils.IntFloatMap.Entries, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Entries entries2]
com.badlogic.gdx.utils.IntFloatMap	[com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Values values1, com.badlogic.gdx.utils.IntFloatMap::values():com.badlogic.gdx.utils.IntFloatMap.Values, com.badlogic.gdx.utils.IntFloatMap::com.badlogic.gdx.utils.IntFloatMap.Values values2]
com.badlogic.gdx.utils.IntIntMap	[com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Entries entries1, com.badlogic.gdx.utils.IntIntMap::entries():com.badlogic.gdx.utils.IntIntMap.Entries, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Entries entries2, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Values values1, com.badlogic.gdx.utils.IntIntMap::values():com.badlogic.gdx.utils.IntIntMap.Values, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Values values2, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Keys keys1, com.badlogic.gdx.utils.IntIntMap::keys():com.badlogic.gdx.utils.IntIntMap.Keys, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Keys keys2]
com.badlogic.gdx.utils.IntIntMap	[com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Entries entries1, com.badlogic.gdx.utils.IntIntMap::entries():com.badlogic.gdx.utils.IntIntMap.Entries, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Entries entries2, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Values values1, com.badlogic.gdx.utils.IntIntMap::values():com.badlogic.gdx.utils.IntIntMap.Values, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Values values2]
com.badlogic.gdx.utils.IntIntMap	[com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Values values1, com.badlogic.gdx.utils.IntIntMap::values():com.badlogic.gdx.utils.IntIntMap.Values, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Values values2]
com.badlogic.gdx.utils.IntIntMap	[com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Keys keys1, com.badlogic.gdx.utils.IntIntMap::keys():com.badlogic.gdx.utils.IntIntMap.Keys, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Keys keys2]
com.badlogic.gdx.utils.IntIntMap	[com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Entries entries1, com.badlogic.gdx.utils.IntIntMap::entries():com.badlogic.gdx.utils.IntIntMap.Entries, com.badlogic.gdx.utils.IntIntMap::com.badlogic.gdx.utils.IntIntMap.Entries entries2]
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane	[com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::boolean overscrollX, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::boolean overscrollY, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::setOverscroll(boolean, boolean):void, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float overscrollDistance, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float overscrollSpeedMin, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float overscrollSpeedMax, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::setupOverscroll(float, float, float):void]
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane	[com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float overscrollDistance, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float overscrollSpeedMin, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float overscrollSpeedMax, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::setupOverscroll(float, float, float):void]
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane	[com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::boolean overscrollX, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::boolean overscrollY, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::setOverscroll(boolean, boolean):void]
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane	[com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::boolean forceScrollX, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::boolean forceScrollY, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::setForceScroll(boolean, boolean):void]
com.badlogic.gdx.scenes.scene2d.ui.ScrollPane	[com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float velocityX, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::float velocityY, com.badlogic.gdx.scenes.scene2d.ui.ScrollPane::fling(float, float, float):void]
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener	[com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::float minSpeed, com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::setup(float, float, float, float):void, com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::float maxSpeed, com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::long rampTime, com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::float tickSecs]
com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener	[com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::float padTop, com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::setPadding(float, float):void, com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::float padBottom, com.badlogic.gdx.scenes.scene2d.utils.DragScrollListener::isBelow(float):boolean]
com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData	[com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::char[] breakChars, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::isBreakChar(char):boolean, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::getWrapIndex(com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph>, int):int, com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData::isWhitespace(char):boolean]
com.badlogic.gdx.maps.tiled.TideMapLoader	[com.badlogic.gdx.maps.tiled.TideMapLoader::loadMap(com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.files.FileHandle, com.badlogic.gdx.maps.ImageResolver):com.badlogic.gdx.maps.tiled.TiledMap, com.badlogic.gdx.maps.tiled.TideMapLoader::loadTileSheets(com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.files.FileHandle):com.badlogic.gdx.utils.Array<com.badlogic.gdx.files.FileHandle>, com.badlogic.gdx.maps.tiled.TideMapLoader::loadProperties(com.badlogic.gdx.maps.MapProperties, com.badlogic.gdx.utils.XmlReader.Element):void, com.badlogic.gdx.maps.tiled.TideMapLoader::loadTileSheet(com.badlogic.gdx.maps.tiled.TiledMap, com.badlogic.gdx.utils.XmlReader.Element, com.badlogic.gdx.files.FileHandle, com.badlogic.gdx.maps.ImageResolver):void, com.badlogic.gdx.maps.tiled.TideMapLoader::loadLayer(com.badlogic.gdx.maps.tiled.TiledMap, com.badlogic.gdx.utils.XmlReader.Element):void]
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer	[com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::com.badlogic.gdx.math.Matrix4 isoTransform, com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::init():void, com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::com.badlogic.gdx.math.Matrix4 invIsotransform, com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::com.badlogic.gdx.math.Vector3 screenPos, com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::translateScreenToIso(com.badlogic.gdx.math.Vector2):com.badlogic.gdx.math.Vector3]
com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer	[com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::com.badlogic.gdx.math.Matrix4 isoTransform, com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::init():void, com.badlogic.gdx.maps.tiled.renderers.IsometricTiledMapRenderer::com.badlogic.gdx.math.Matrix4 invIsotransform]
com.badlogic.gdx.scenes.scene2d.utils.ClickListener	[com.badlogic.gdx.scenes.scene2d.utils.ClickListener::float tapSquareSize, com.badlogic.gdx.scenes.scene2d.utils.ClickListener::inTapSquare(float, float):boolean, com.badlogic.gdx.scenes.scene2d.utils.ClickListener::invalidateTapSquare():void, com.badlogic.gdx.scenes.scene2d.utils.ClickListener::float touchDownX, com.badlogic.gdx.scenes.scene2d.utils.ClickListener::float touchDownY, com.badlogic.gdx.scenes.scene2d.utils.ClickListener::inTapSquare():boolean]
com.badlogic.gdx.utils.XmlReader	[com.badlogic.gdx.utils.XmlReader::com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element> elements, com.badlogic.gdx.utils.XmlReader::com.badlogic.gdx.utils.XmlReader.Element root, com.badlogic.gdx.utils.XmlReader::com.badlogic.gdx.utils.XmlReader.Element current, com.badlogic.gdx.utils.XmlReader::text(java.lang.String):void, com.badlogic.gdx.utils.XmlReader::open(java.lang.String):void, com.badlogic.gdx.utils.XmlReader::close():void]
com.badlogic.gdx.Net.HttpRequest	[com.badlogic.gdx.Net.HttpRequest::java.io.InputStream contentStream, com.badlogic.gdx.Net.HttpRequest::long contentLength, com.badlogic.gdx.Net.HttpRequest::setContent(java.io.InputStream, long):void]
com.badlogic.gdx.graphics.g2d.PixmapPacker	[com.badlogic.gdx.graphics.g2d.PixmapPacker::com.badlogic.gdx.graphics.Color c, com.badlogic.gdx.graphics.g2d.PixmapPacker::getSplits(com.badlogic.gdx.graphics.Pixmap):int[], com.badlogic.gdx.graphics.g2d.PixmapPacker::getPads(com.badlogic.gdx.graphics.Pixmap, int[]):int[], com.badlogic.gdx.graphics.g2d.PixmapPacker::getSplitPoint(com.badlogic.gdx.graphics.Pixmap, int, int, boolean, boolean):int]
com.badlogic.gdx.graphics.g2d.SpriteCache	[com.badlogic.gdx.graphics.g2d.SpriteCache::com.badlogic.gdx.graphics.Color color, com.badlogic.gdx.graphics.g2d.SpriteCache::setPackedColor(float):void, com.badlogic.gdx.graphics.g2d.SpriteCache::setColor(com.badlogic.gdx.graphics.Color):void, com.badlogic.gdx.graphics.g2d.SpriteCache::setColor(float, float, float, float):void, com.badlogic.gdx.graphics.g2d.SpriteCache::float colorPacked]
com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch	[com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch::boolean useGPU, com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch::com.badlogic.gdx.graphics.g3d.particles.ParticleShader.AlignMode mode, com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch::getShader(com.badlogic.gdx.graphics.g3d.Renderable):com.badlogic.gdx.graphics.g3d.Shader]
com.badlogic.gdx.input.GestureDetector	[com.badlogic.gdx.input.GestureDetector::float tapRectangleWidth, com.badlogic.gdx.input.GestureDetector::float tapRectangleHeight, com.badlogic.gdx.input.GestureDetector::isWithinTapRectangle(float, float, float, float):boolean, com.badlogic.gdx.input.GestureDetector::setTapRectangleSize(float, float):void]
com.badlogic.gdx.maps.MapLayer	[com.badlogic.gdx.maps.MapLayer::float opacity, com.badlogic.gdx.maps.MapLayer::getOpacity():float, com.badlogic.gdx.maps.MapLayer::com.badlogic.gdx.maps.MapLayer parent, com.badlogic.gdx.maps.MapLayer::setParent(com.badlogic.gdx.maps.MapLayer):void]
com.badlogic.gdx.maps.MapLayer	[com.badlogic.gdx.maps.MapLayer::float offsetX, com.badlogic.gdx.maps.MapLayer::setOffsetX(float):void, com.badlogic.gdx.maps.MapLayer::float renderOffsetX, com.badlogic.gdx.maps.MapLayer::getRenderOffsetX():float, com.badlogic.gdx.maps.MapLayer::boolean renderOffsetDirty, com.badlogic.gdx.maps.MapLayer::float renderOffsetY, com.badlogic.gdx.maps.MapLayer::getRenderOffsetY():float, com.badlogic.gdx.maps.MapLayer::calculateRenderOffsets():void, com.badlogic.gdx.maps.MapLayer::invalidateRenderOffset():void, com.badlogic.gdx.maps.MapLayer::float offsetY, com.badlogic.gdx.maps.MapLayer::setOffsetY(float):void]
com.badlogic.gdx.maps.MapLayer	[com.badlogic.gdx.maps.MapLayer::com.badlogic.gdx.graphics.Color tintColor, com.badlogic.gdx.maps.MapLayer::com.badlogic.gdx.graphics.Color tempColor, com.badlogic.gdx.maps.MapLayer::getCombinedTintColor():com.badlogic.gdx.graphics.Color]
com.badlogic.gdx.maps.MapLayer	[com.badlogic.gdx.maps.MapLayer::float renderOffsetX, com.badlogic.gdx.maps.MapLayer::getRenderOffsetX():float, com.badlogic.gdx.maps.MapLayer::boolean renderOffsetDirty]
com.badlogic.gdx.maps.MapLayer	[com.badlogic.gdx.maps.MapLayer::float offsetX, com.badlogic.gdx.maps.MapLayer::setOffsetX(float):void, com.badlogic.gdx.maps.MapLayer::float renderOffsetX, com.badlogic.gdx.maps.MapLayer::getRenderOffsetX():float, com.badlogic.gdx.maps.MapLayer::boolean renderOffsetDirty, com.badlogic.gdx.maps.MapLayer::float renderOffsetY, com.badlogic.gdx.maps.MapLayer::getRenderOffsetY():float, com.badlogic.gdx.maps.MapLayer::calculateRenderOffsets():void, com.badlogic.gdx.maps.MapLayer::invalidateRenderOffset():void]
com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer	[com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer::float maxTileWidth, com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer::float maxTileHeight, com.badlogic.gdx.maps.tiled.renderers.OrthoCachedTiledMapRenderer::setMaxTileSize(float, float):void]
com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile	[com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile::int[] animationIntervals, com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile::int loopDuration, com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile::getCurrentFrameIndex():int, com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile::setAnimationIntervals(int[]):void]
com.badlogic.gdx.math.collision.BoundingBox	[com.badlogic.gdx.math.collision.BoundingBox::com.badlogic.gdx.math.Vector3 cnt, com.badlogic.gdx.math.collision.BoundingBox::com.badlogic.gdx.math.Vector3 dim, com.badlogic.gdx.math.collision.BoundingBox::getCenterX():float, com.badlogic.gdx.math.collision.BoundingBox::getCenterY():float, com.badlogic.gdx.math.collision.BoundingBox::getCenterZ():float, com.badlogic.gdx.math.collision.BoundingBox::getWidth():float, com.badlogic.gdx.math.collision.BoundingBox::getHeight():float, com.badlogic.gdx.math.collision.BoundingBox::getDepth():float]
com.badlogic.gdx.scenes.scene2d.Actor	[com.badlogic.gdx.scenes.scene2d.Actor::boolean debug, com.badlogic.gdx.scenes.scene2d.Actor::setDebug(boolean):void, com.badlogic.gdx.scenes.scene2d.Actor::debug():com.badlogic.gdx.scenes.scene2d.Actor]
com.badlogic.gdx.scenes.scene2d.Actor	[com.badlogic.gdx.scenes.scene2d.Actor::com.badlogic.gdx.utils.DelayedRemovalArray<com.badlogic.gdx.scenes.scene2d.EventListener> listeners, com.badlogic.gdx.scenes.scene2d.Actor::removeListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::addListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::com.badlogic.gdx.utils.DelayedRemovalArray<com.badlogic.gdx.scenes.scene2d.EventListener> captureListeners, com.badlogic.gdx.scenes.scene2d.Actor::removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::clearListeners():void, com.badlogic.gdx.scenes.scene2d.Actor::clear():void, com.badlogic.gdx.scenes.scene2d.Actor::com.badlogic.gdx.utils.Array<com.badlogic.gdx.scenes.scene2d.Action> actions, com.badlogic.gdx.scenes.scene2d.Actor::hasActions():boolean, com.badlogic.gdx.scenes.scene2d.Actor::act(float):void, com.badlogic.gdx.scenes.scene2d.Actor::addAction(com.badlogic.gdx.scenes.scene2d.Action):void, com.badlogic.gdx.scenes.scene2d.Actor::removeAction(com.badlogic.gdx.scenes.scene2d.Action):void, com.badlogic.gdx.scenes.scene2d.Actor::clearActions():void]
com.badlogic.gdx.scenes.scene2d.Actor	[com.badlogic.gdx.scenes.scene2d.Actor::com.badlogic.gdx.utils.DelayedRemovalArray<com.badlogic.gdx.scenes.scene2d.EventListener> listeners, com.badlogic.gdx.scenes.scene2d.Actor::removeListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::addListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::addCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::com.badlogic.gdx.utils.DelayedRemovalArray<com.badlogic.gdx.scenes.scene2d.EventListener> captureListeners, com.badlogic.gdx.scenes.scene2d.Actor::removeCaptureListener(com.badlogic.gdx.scenes.scene2d.EventListener):boolean, com.badlogic.gdx.scenes.scene2d.Actor::clearListeners():void, com.badlogic.gdx.scenes.scene2d.Actor::clear():void]
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction	[com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::float startX, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::float startY, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::setStartPosition(float, float):void]
com.badlogic.gdx.scenes.scene2d.actions.MoveToAction	[com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::float endX, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::float endY, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::setPosition(float, float):void, com.badlogic.gdx.scenes.scene2d.actions.MoveToAction::setPosition(float, float, int):void]
com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction	[com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::float endX, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::float endY, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::setScale(float, float):void, com.badlogic.gdx.scenes.scene2d.actions.ScaleToAction::setScale(float):void]
com.badlogic.gdx.scenes.scene2d.actions.SizeToAction	[com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::float endWidth, com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::float endHeight, com.badlogic.gdx.scenes.scene2d.actions.SizeToAction::setSize(float, float):void]
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup	[com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::boolean expand, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::expand():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::expand(boolean):com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::grow():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::float fill, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::fill():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::fill(float):com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup]
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup	[com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::boolean wrapReverse, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::wrapReverse():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::wrapReverse(boolean):com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup]
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup	[com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::float fill, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::fill():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::fill(float):com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup]
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup	[com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::int rowAlign, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::rowAlign(int):com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::rowCenter():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::rowTop():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::rowLeft():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::rowBottom():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::rowRight():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup]
com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup	[com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::int align, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::align(int):com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::center():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::top():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::left():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::bottom():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup, com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup::right():com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup]
com.badlogic.gdx.scenes.scene2d.ui.Slider	[com.badlogic.gdx.scenes.scene2d.ui.Slider::float[] snapValues, com.badlogic.gdx.scenes.scene2d.ui.Slider::float threshold, com.badlogic.gdx.scenes.scene2d.ui.Slider::snap(float):float, com.badlogic.gdx.scenes.scene2d.ui.Slider::setSnapToValues(float, float[]):void]
com.badlogic.gdx.scenes.scene2d.ui.SplitPane	[com.badlogic.gdx.scenes.scene2d.ui.SplitPane::float minAmount, com.badlogic.gdx.scenes.scene2d.ui.SplitPane::setMinSplitAmount(float):void, com.badlogic.gdx.scenes.scene2d.ui.SplitPane::float maxAmount, com.badlogic.gdx.scenes.scene2d.ui.SplitPane::setMaxSplitAmount(float):void]
com.badlogic.gdx.scenes.scene2d.ui.Table	[com.badlogic.gdx.scenes.scene2d.ui.Table::float[] columnWidth, com.badlogic.gdx.scenes.scene2d.ui.Table::float[] rowHeight, com.badlogic.gdx.scenes.scene2d.ui.Table::getRowHeight(int):float, com.badlogic.gdx.scenes.scene2d.ui.Table::getColumnWidth(int):float]
com.badlogic.gdx.scenes.scene2d.ui.Table	[com.badlogic.gdx.scenes.scene2d.ui.Table::com.badlogic.gdx.utils.Array<com.badlogic.gdx.scenes.scene2d.ui.Table.DebugRect> debugRects, com.badlogic.gdx.scenes.scene2d.ui.Table::clearDebugRects():void, com.badlogic.gdx.scenes.scene2d.ui.Table::addDebugRect(float, float, float, float, com.badlogic.gdx.graphics.Color):void]
com.badlogic.gdx.scenes.scene2d.ui.Table	[com.badlogic.gdx.scenes.scene2d.ui.Table::int align, com.badlogic.gdx.scenes.scene2d.ui.Table::align(int):com.badlogic.gdx.scenes.scene2d.ui.Table, com.badlogic.gdx.scenes.scene2d.ui.Table::center():com.badlogic.gdx.scenes.scene2d.ui.Table, com.badlogic.gdx.scenes.scene2d.ui.Table::top():com.badlogic.gdx.scenes.scene2d.ui.Table, com.badlogic.gdx.scenes.scene2d.ui.Table::left():com.badlogic.gdx.scenes.scene2d.ui.Table, com.badlogic.gdx.scenes.scene2d.ui.Table::bottom():com.badlogic.gdx.scenes.scene2d.ui.Table, com.badlogic.gdx.scenes.scene2d.ui.Table::right():com.badlogic.gdx.scenes.scene2d.ui.Table]
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup	[com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::boolean expand, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::expand():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::expand(boolean):com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::grow():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::float fill, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::fill():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::fill(float):com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup]
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup	[com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::int columnAlign, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::columnAlign(int):com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::columnCenter():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::columnTop():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::columnLeft():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::columnBottom():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::columnRight():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup]
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup	[com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::int align, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::align(int):com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::center():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::top():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::left():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::bottom():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::right():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup]
com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup	[com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::float fill, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::fill():com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup, com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup::fill(float):com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup]
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop	[com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::float dragActorX, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::float dragActorY, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::setDragActorPosition(float, float):void]
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop	[com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::float touchOffsetX, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::float touchOffsetY, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::setTouchOffset(float, float):void]
com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop	[com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload payload, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::isDragging():boolean, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::long dragValidTime, com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop::isDragValid():boolean]
com.badlogic.gdx.utils.I18NBundle	[com.badlogic.gdx.utils.I18NBundle::java.util.Locale locale, com.badlogic.gdx.utils.I18NBundle::com.badlogic.gdx.utils.TextFormatter formatter, com.badlogic.gdx.utils.I18NBundle::setLocale(java.util.Locale):void, com.badlogic.gdx.utils.I18NBundle::createBundleImpl(com.badlogic.gdx.files.FileHandle, java.util.Locale, java.lang.String):com.badlogic.gdx.utils.I18NBundle]
com.badlogic.gdx.utils.I18NBundle	[com.badlogic.gdx.utils.I18NBundle::com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.String> properties, com.badlogic.gdx.utils.I18NBundle::load(java.io.Reader):void, com.badlogic.gdx.utils.I18NBundle::keys():java.util.Set<java.lang.String>, com.badlogic.gdx.utils.I18NBundle::debug(java.lang.String):void]
com.badlogic.gdx.utils.I18NBundle	[com.badlogic.gdx.utils.I18NBundle::com.badlogic.gdx.utils.I18NBundle parent, com.badlogic.gdx.utils.I18NBundle::loadBundleChain(com.badlogic.gdx.files.FileHandle, java.lang.String, java.util.List<java.util.Locale>, int, com.badlogic.gdx.utils.I18NBundle):com.badlogic.gdx.utils.I18NBundle, com.badlogic.gdx.utils.I18NBundle::get(java.lang.String):java.lang.String, com.badlogic.gdx.utils.I18NBundle::com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.String> properties, com.badlogic.gdx.utils.I18NBundle::load(java.io.Reader):void, com.badlogic.gdx.utils.I18NBundle::keys():java.util.Set<java.lang.String>, com.badlogic.gdx.utils.I18NBundle::debug(java.lang.String):void, com.badlogic.gdx.utils.I18NBundle::loadBundle(com.badlogic.gdx.files.FileHandle, java.lang.String, java.util.Locale):com.badlogic.gdx.utils.I18NBundle]
com.badlogic.gdx.utils.IntSet	[com.badlogic.gdx.utils.IntSet::com.badlogic.gdx.utils.IntSet.IntSetIterator iterator1, com.badlogic.gdx.utils.IntSet::iterator():com.badlogic.gdx.utils.IntSet.IntSetIterator, com.badlogic.gdx.utils.IntSet::com.badlogic.gdx.utils.IntSet.IntSetIterator iterator2]
com.badlogic.gdx.utils.Json	[com.badlogic.gdx.utils.Json::com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.Class> tagToClass, com.badlogic.gdx.utils.Json::addClassTag(java.lang.String, java.lang.Class):void, com.badlogic.gdx.utils.Json::com.badlogic.gdx.utils.ObjectMap<java.lang.Class,java.lang.String> classToTag]
com.badlogic.gdx.utils.Json	[com.badlogic.gdx.utils.Json::boolean enumNames, com.badlogic.gdx.utils.Json::convertToString(java.lang.Enum):java.lang.String, com.badlogic.gdx.utils.Json::convertToString(java.lang.Object):java.lang.String]
com.badlogic.gdx.utils.compression.lzma.Encoder	[com.badlogic.gdx.utils.compression.lzma.Encoder::int _distTableSize, com.badlogic.gdx.utils.compression.lzma.Encoder::SetDictionarySize(int):boolean, com.badlogic.gdx.utils.compression.lzma.Encoder::int _dictionarySize]
com.badlogic.gdx.utils.compression.lzma.Encoder	[com.badlogic.gdx.utils.compression.lzma.Encoder::int _distTableSize, com.badlogic.gdx.utils.compression.lzma.Encoder::SetDictionarySize(int):boolean, com.badlogic.gdx.utils.compression.lzma.Encoder::int _dictionarySize, com.badlogic.gdx.utils.compression.lzma.Encoder::int _numLiteralPosStateBits, com.badlogic.gdx.utils.compression.lzma.Encoder::int _numLiteralContextBits, com.badlogic.gdx.utils.compression.lzma.Encoder::int _posStateBits, com.badlogic.gdx.utils.compression.lzma.Encoder::byte[] properties, com.badlogic.gdx.utils.compression.lzma.Encoder::WriteCoderProperties(java.io.OutputStream):void, com.badlogic.gdx.utils.compression.lzma.Encoder::SetLcLpPb(int, int, int):boolean]
com.badlogic.gdx.utils.viewport.Viewport	[com.badlogic.gdx.utils.viewport.Viewport::float worldWidth, com.badlogic.gdx.utils.viewport.Viewport::float worldHeight, com.badlogic.gdx.utils.viewport.Viewport::setWorldSize(float, float):void]
com.badlogic.gdx.utils.viewport.Viewport	[com.badlogic.gdx.utils.viewport.Viewport::com.badlogic.gdx.graphics.Camera camera, com.badlogic.gdx.utils.viewport.Viewport::int screenX, com.badlogic.gdx.utils.viewport.Viewport::int screenWidth, com.badlogic.gdx.utils.viewport.Viewport::int screenY, com.badlogic.gdx.utils.viewport.Viewport::int screenHeight, com.badlogic.gdx.utils.viewport.Viewport::com.badlogic.gdx.math.Vector3 tmp, com.badlogic.gdx.utils.viewport.Viewport::apply(boolean):void, com.badlogic.gdx.utils.viewport.Viewport::unproject(com.badlogic.gdx.math.Vector2):com.badlogic.gdx.math.Vector2, com.badlogic.gdx.utils.viewport.Viewport::project(com.badlogic.gdx.math.Vector2):com.badlogic.gdx.math.Vector2, com.badlogic.gdx.utils.viewport.Viewport::toScreenCoordinates(com.badlogic.gdx.math.Vector2, com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Vector2, com.badlogic.gdx.utils.viewport.Viewport::unproject(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Vector3, com.badlogic.gdx.utils.viewport.Viewport::calculateScissors(com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Rectangle, com.badlogic.gdx.math.Rectangle):void, com.badlogic.gdx.utils.viewport.Viewport::project(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Vector3, com.badlogic.gdx.utils.viewport.Viewport::setScreenBounds(int, int, int, int):void, com.badlogic.gdx.utils.viewport.Viewport::setScreenPosition(int, int):void, com.badlogic.gdx.utils.viewport.Viewport::setScreenSize(int, int):void, com.badlogic.gdx.utils.viewport.Viewport::getRightGutterX():int, com.badlogic.gdx.utils.viewport.Viewport::getRightGutterWidth():int, com.badlogic.gdx.utils.viewport.Viewport::getTopGutterY():int, com.badlogic.gdx.utils.viewport.Viewport::getTopGutterHeight():int]
com.badlogic.gdx.graphics.Pixmap	[com.badlogic.gdx.graphics.Pixmap::int color, com.badlogic.gdx.graphics.Pixmap::setColor(float, float, float, float):void, com.badlogic.gdx.graphics.Pixmap::setColor(com.badlogic.gdx.graphics.Color):void]
com.badlogic.gdx.graphics.g3d.particles.ParticleShader	[com.badlogic.gdx.graphics.g3d.particles.ParticleShader::com.badlogic.gdx.graphics.g3d.particles.ParticleShader.Config config, com.badlogic.gdx.graphics.g3d.particles.ParticleShader::getDefaultCullFace():int, com.badlogic.gdx.graphics.g3d.particles.ParticleShader::setDefaultCullFace(int):void]
com.badlogic.gdx.graphics.g3d.particles.ParticleShader	[com.badlogic.gdx.graphics.g3d.particles.ParticleShader::com.badlogic.gdx.graphics.g3d.particles.ParticleShader.Config config, com.badlogic.gdx.graphics.g3d.particles.ParticleShader::getDefaultCullFace():int, com.badlogic.gdx.graphics.g3d.particles.ParticleShader::setDefaultCullFace(int):void, com.badlogic.gdx.graphics.g3d.particles.ParticleShader::getDefaultDepthFunc():int, com.badlogic.gdx.graphics.g3d.particles.ParticleShader::setDefaultDepthFunc(int):void]
com.badlogic.gdx.graphics.g3d.particles.ParticleSystem	[com.badlogic.gdx.graphics.g3d.particles.ParticleSystem::com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.particles.ParticleEffect> effects, com.badlogic.gdx.graphics.g3d.particles.ParticleSystem::update():void, com.badlogic.gdx.graphics.g3d.particles.ParticleSystem::updateAndDraw():void, com.badlogic.gdx.graphics.g3d.particles.ParticleSystem::draw():void, com.badlogic.gdx.graphics.g3d.particles.ParticleSystem::update(float):void, com.badlogic.gdx.graphics.g3d.particles.ParticleSystem::updateAndDraw(float):void]
com.badlogic.gdx.graphics.g3d.utils.ShapeCache	[com.badlogic.gdx.graphics.g3d.utils.ShapeCache::com.badlogic.gdx.graphics.g3d.Renderable renderable, com.badlogic.gdx.graphics.g3d.utils.ShapeCache::getMaterial():com.badlogic.gdx.graphics.g3d.Material, com.badlogic.gdx.graphics.g3d.utils.ShapeCache::getWorldTransform():com.badlogic.gdx.math.Matrix4]
com.badlogic.gdx.graphics.g3d.utils.ShapeCache	[com.badlogic.gdx.graphics.g3d.utils.ShapeCache::com.badlogic.gdx.graphics.g3d.utils.MeshBuilder builder, com.badlogic.gdx.graphics.g3d.utils.ShapeCache::com.badlogic.gdx.graphics.Mesh mesh, com.badlogic.gdx.graphics.g3d.utils.ShapeCache::boolean building, com.badlogic.gdx.graphics.g3d.utils.ShapeCache::end():void, com.badlogic.gdx.graphics.g3d.utils.ShapeCache::java.lang.String id, com.badlogic.gdx.graphics.g3d.utils.ShapeCache::begin(int):com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder]
com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO	[com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO::int vaoHandle, com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO::createVAO():void, com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO::deleteVAO():void]
com.badlogic.gdx.input.GestureDetector.VelocityTracker	[com.badlogic.gdx.input.GestureDetector.VelocityTracker::int sampleSize, com.badlogic.gdx.input.GestureDetector.VelocityTracker::getAverage(float[], int):float, com.badlogic.gdx.input.GestureDetector.VelocityTracker::getAverage(long[], int):long, com.badlogic.gdx.input.GestureDetector.VelocityTracker::getSum(float[], int):float]
com.badlogic.gdx.math.Frustum	[com.badlogic.gdx.math.Frustum::com.badlogic.gdx.math.Plane[] planes, com.badlogic.gdx.math.Frustum::pointInFrustum(com.badlogic.gdx.math.Vector3):boolean, com.badlogic.gdx.math.Frustum::boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox):boolean, com.badlogic.gdx.math.Frustum::boundsInFrustum(com.badlogic.gdx.math.collision.OrientedBoundingBox):boolean, com.badlogic.gdx.math.Frustum::pointInFrustum(float, float, float):boolean, com.badlogic.gdx.math.Frustum::boundsInFrustum(float, float, float, float, float, float):boolean]
com.badlogic.gdx.scenes.scene2d.Group	[com.badlogic.gdx.scenes.scene2d.Group::com.badlogic.gdx.math.Matrix4 oldTransform, com.badlogic.gdx.scenes.scene2d.Group::applyTransform(com.badlogic.gdx.graphics.g2d.Batch, com.badlogic.gdx.math.Matrix4):void, com.badlogic.gdx.scenes.scene2d.Group::applyTransform(com.badlogic.gdx.graphics.glutils.ShapeRenderer, com.badlogic.gdx.math.Matrix4):void]
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar	[com.badlogic.gdx.scenes.scene2d.ui.ProgressBar::float stepSize, com.badlogic.gdx.scenes.scene2d.ui.ProgressBar::round(float):float, com.badlogic.gdx.scenes.scene2d.ui.ProgressBar::setStepSize(float):void]
com.badlogic.gdx.scenes.scene2d.ui.ProgressBar	[com.badlogic.gdx.scenes.scene2d.ui.ProgressBar::float animateTime, com.badlogic.gdx.scenes.scene2d.ui.ProgressBar::updateVisualValue():void, com.badlogic.gdx.scenes.scene2d.ui.ProgressBar::isAnimating():boolean]
com.badlogic.gdx.utils.PerformanceCounters	[com.badlogic.gdx.utils.PerformanceCounters::com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.PerformanceCounter> counters, com.badlogic.gdx.utils.PerformanceCounters::add(java.lang.String, int):com.badlogic.gdx.utils.PerformanceCounter, com.badlogic.gdx.utils.PerformanceCounters::add(java.lang.String):com.badlogic.gdx.utils.PerformanceCounter, com.badlogic.gdx.utils.PerformanceCounters::tick(float):void, com.badlogic.gdx.utils.PerformanceCounters::toString(com.badlogic.gdx.utils.StringBuilder):com.badlogic.gdx.utils.StringBuilder]
com.badlogic.gdx.utils.Sort	[com.badlogic.gdx.utils.Sort::com.badlogic.gdx.utils.ComparableTimSort comparableTimSort, com.badlogic.gdx.utils.Sort::sort(com.badlogic.gdx.utils.Array<T>):void, com.badlogic.gdx.utils.Sort::sort(java.lang.Object[]):void, com.badlogic.gdx.utils.Sort::sort(java.lang.Object[], int, int):void]
com.badlogic.gdx.utils.Sort	[com.badlogic.gdx.utils.Sort::com.badlogic.gdx.utils.TimSort timSort, com.badlogic.gdx.utils.Sort::sort(com.badlogic.gdx.utils.Array<T>, java.util.Comparator<? super T>):void, com.badlogic.gdx.utils.Sort::sort(T[], java.util.Comparator<? super T>):void, com.badlogic.gdx.utils.Sort::sort(T[], java.util.Comparator<? super T>, int, int):void]
com.badlogic.gdx.utils.compression.rangecoder.Encoder	[com.badlogic.gdx.utils.compression.rangecoder.Encoder::java.io.OutputStream Stream, com.badlogic.gdx.utils.compression.rangecoder.Encoder::ReleaseStream():void, com.badlogic.gdx.utils.compression.rangecoder.Encoder::FlushStream():void]
com.badlogic.gdx.utils.compression.rangecoder.Encoder	[com.badlogic.gdx.utils.compression.rangecoder.Encoder::long Low, com.badlogic.gdx.utils.compression.rangecoder.Encoder::int Range, com.badlogic.gdx.utils.compression.rangecoder.Encoder::EncodeDirectBits(int, int):void, com.badlogic.gdx.utils.compression.rangecoder.Encoder::Encode(short[], int, int):void, com.badlogic.gdx.utils.compression.rangecoder.Encoder::int _cacheSize, com.badlogic.gdx.utils.compression.rangecoder.Encoder::long _position, com.badlogic.gdx.utils.compression.rangecoder.Encoder::int _cache, com.badlogic.gdx.utils.compression.rangecoder.Encoder::GetProcessedSizeAdd():long, com.badlogic.gdx.utils.compression.rangecoder.Encoder::Init():void, com.badlogic.gdx.utils.compression.rangecoder.Encoder::ShiftLow():void, com.badlogic.gdx.utils.compression.rangecoder.Encoder::FlushData():void]
com.badlogic.gdx.utils.compression.rangecoder.Encoder	[com.badlogic.gdx.utils.compression.rangecoder.Encoder::long Low, com.badlogic.gdx.utils.compression.rangecoder.Encoder::int Range, com.badlogic.gdx.utils.compression.rangecoder.Encoder::EncodeDirectBits(int, int):void, com.badlogic.gdx.utils.compression.rangecoder.Encoder::Encode(short[], int, int):void]
com.badlogic.gdx.graphics.glutils.ShaderProgram	[com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String log, com.badlogic.gdx.graphics.glutils.ShaderProgram::getLog():java.lang.String, com.badlogic.gdx.graphics.glutils.ShaderProgram::fetchUniformLocation(java.lang.String, boolean):int, com.badlogic.gdx.graphics.glutils.ShaderProgram::com.badlogic.gdx.utils.ObjectIntMap<java.lang.String> attributes, com.badlogic.gdx.graphics.glutils.ShaderProgram::fetchAttributeLocation(java.lang.String):int, com.badlogic.gdx.graphics.glutils.ShaderProgram::fetchAttributes():void, com.badlogic.gdx.graphics.glutils.ShaderProgram::fetchUniforms():void, com.badlogic.gdx.graphics.glutils.ShaderProgram::com.badlogic.gdx.utils.ObjectIntMap<java.lang.String> attributeTypes, com.badlogic.gdx.graphics.glutils.ShaderProgram::com.badlogic.gdx.utils.ObjectIntMap<java.lang.String> attributeSizes, com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String[] attributeNames, com.badlogic.gdx.graphics.glutils.ShaderProgram::java.nio.IntBuffer params, com.badlogic.gdx.graphics.glutils.ShaderProgram::java.nio.IntBuffer type, com.badlogic.gdx.graphics.glutils.ShaderProgram::com.badlogic.gdx.utils.ObjectIntMap<java.lang.String> uniforms, com.badlogic.gdx.graphics.glutils.ShaderProgram::com.badlogic.gdx.utils.ObjectIntMap<java.lang.String> uniformTypes, com.badlogic.gdx.graphics.glutils.ShaderProgram::com.badlogic.gdx.utils.ObjectIntMap<java.lang.String> uniformSizes, com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String[] uniformNames, com.badlogic.gdx.graphics.glutils.ShaderProgram::loadShader(int, java.lang.String):int, com.badlogic.gdx.graphics.glutils.ShaderProgram::int program]
com.badlogic.gdx.graphics.glutils.ShaderProgram	[com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String vertexShaderSource, com.badlogic.gdx.graphics.glutils.ShaderProgram::checkManaged():void, com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String fragmentShaderSource, com.badlogic.gdx.graphics.glutils.ShaderProgram::boolean invalidated, com.badlogic.gdx.graphics.glutils.ShaderProgram::invalidateAllShaderPrograms(com.badlogic.gdx.Application):void]
com.badlogic.gdx.graphics.glutils.ShaderProgram	[com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String vertexShaderSource, com.badlogic.gdx.graphics.glutils.ShaderProgram::checkManaged():void, com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String fragmentShaderSource, com.badlogic.gdx.graphics.glutils.ShaderProgram::boolean invalidated, com.badlogic.gdx.graphics.glutils.ShaderProgram::invalidateAllShaderPrograms(com.badlogic.gdx.Application):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform1fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform1fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform2fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform2fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform3fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform3fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform4fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform4fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformMatrix3fv(java.lang.String, java.nio.FloatBuffer, int, boolean):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformMatrix4fv(java.lang.String, java.nio.FloatBuffer, int, boolean):void]
com.badlogic.gdx.graphics.glutils.ShaderProgram	[com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String vertexShaderSource, com.badlogic.gdx.graphics.glutils.ShaderProgram::checkManaged():void, com.badlogic.gdx.graphics.glutils.ShaderProgram::java.lang.String fragmentShaderSource, com.badlogic.gdx.graphics.glutils.ShaderProgram::boolean invalidated, com.badlogic.gdx.graphics.glutils.ShaderProgram::invalidateAllShaderPrograms(com.badlogic.gdx.Application):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(java.lang.String, int, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformi(int, int, int, int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(java.lang.String, float, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformf(int, float, float, float, float):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform1fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform1fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform2fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform2fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform3fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform3fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform4fv(java.lang.String, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniform4fv(int, float[], int, int):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformMatrix3fv(java.lang.String, java.nio.FloatBuffer, int, boolean):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformMatrix4fv(java.lang.String, java.nio.FloatBuffer, int, boolean):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformMatrix(int, com.badlogic.gdx.math.Matrix4, boolean):void, com.badlogic.gdx.graphics.glutils.ShaderProgram::setUniformMatrix4fv(int, float[], int, int):void]
com.badlogic.gdx.scenes.scene2d.ui.Skin	[com.badlogic.gdx.scenes.scene2d.ui.Skin::com.badlogic.gdx.utils.ObjectMap<java.lang.Class,com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.Object>> resources, com.badlogic.gdx.scenes.scene2d.ui.Skin::float scale, com.badlogic.gdx.scenes.scene2d.ui.Skin::getPatch(java.lang.String):com.badlogic.gdx.graphics.g2d.NinePatch, com.badlogic.gdx.scenes.scene2d.ui.Skin::getSprite(java.lang.String):com.badlogic.gdx.graphics.g2d.Sprite, com.badlogic.gdx.scenes.scene2d.ui.Skin::getDrawable(java.lang.String):com.badlogic.gdx.scenes.scene2d.utils.Drawable, com.badlogic.gdx.scenes.scene2d.ui.Skin::get(java.lang.String, java.lang.Class<T>):T, com.badlogic.gdx.scenes.scene2d.ui.Skin::optional(java.lang.String, java.lang.Class<T>):T, com.badlogic.gdx.scenes.scene2d.ui.Skin::getAll(java.lang.Class<T>):com.badlogic.gdx.utils.ObjectMap<java.lang.String,T>, com.badlogic.gdx.scenes.scene2d.ui.Skin::getTiledDrawable(java.lang.String):com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable, com.badlogic.gdx.scenes.scene2d.ui.Skin::getRegion(java.lang.String):com.badlogic.gdx.graphics.g2d.TextureRegion, com.badlogic.gdx.scenes.scene2d.ui.Skin::add(java.lang.String, java.lang.Object, java.lang.Class):void, com.badlogic.gdx.scenes.scene2d.ui.Skin::remove(java.lang.String, java.lang.Class):void, com.badlogic.gdx.scenes.scene2d.ui.Skin::has(java.lang.String, java.lang.Class):boolean, com.badlogic.gdx.scenes.scene2d.ui.Skin::find(java.lang.Object):java.lang.String, com.badlogic.gdx.scenes.scene2d.ui.Skin::getRegions(java.lang.String):com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g2d.TextureRegion>]
com.badlogic.gdx.scenes.scene2d.ui.Skin	[com.badlogic.gdx.scenes.scene2d.ui.Skin::com.badlogic.gdx.utils.ObjectMap<java.lang.Class,com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.Object>> resources, com.badlogic.gdx.scenes.scene2d.ui.Skin::float scale, com.badlogic.gdx.scenes.scene2d.ui.Skin::getPatch(java.lang.String):com.badlogic.gdx.graphics.g2d.NinePatch, com.badlogic.gdx.scenes.scene2d.ui.Skin::getSprite(java.lang.String):com.badlogic.gdx.graphics.g2d.Sprite, com.badlogic.gdx.scenes.scene2d.ui.Skin::getDrawable(java.lang.String):com.badlogic.gdx.scenes.scene2d.utils.Drawable, com.badlogic.gdx.scenes.scene2d.ui.Skin::get(java.lang.String, java.lang.Class<T>):T, com.badlogic.gdx.scenes.scene2d.ui.Skin::optional(java.lang.String, java.lang.Class<T>):T, com.badlogic.gdx.scenes.scene2d.ui.Skin::getAll(java.lang.Class<T>):com.badlogic.gdx.utils.ObjectMap<java.lang.String,T>, com.badlogic.gdx.scenes.scene2d.ui.Skin::getTiledDrawable(java.lang.String):com.badlogic.gdx.scenes.scene2d.utils.TiledDrawable, com.badlogic.gdx.scenes.scene2d.ui.Skin::getRegion(java.lang.String):com.badlogic.gdx.graphics.g2d.TextureRegion]
com.badlogic.gdx.math.DelaunayTriangulator	[com.badlogic.gdx.math.DelaunayTriangulator::com.badlogic.gdx.utils.IntArray quicksortStack, com.badlogic.gdx.math.DelaunayTriangulator::com.badlogic.gdx.utils.ShortArray originalIndices, com.badlogic.gdx.math.DelaunayTriangulator::float[] sortedPoints, com.badlogic.gdx.math.DelaunayTriangulator::com.badlogic.gdx.utils.ShortArray triangles, com.badlogic.gdx.math.DelaunayTriangulator::com.badlogic.gdx.utils.IntArray edges, com.badlogic.gdx.math.DelaunayTriangulator::com.badlogic.gdx.utils.BooleanArray complete, com.badlogic.gdx.math.DelaunayTriangulator::float[] superTriangle, com.badlogic.gdx.math.DelaunayTriangulator::sort(float[], int):void, com.badlogic.gdx.math.DelaunayTriangulator::computeTriangles(float[], int, int, boolean):com.badlogic.gdx.utils.ShortArray, com.badlogic.gdx.math.DelaunayTriangulator::quicksortPartition(float[], int, int, short[]):int]
com.badlogic.gdx.math.Polygon	[com.badlogic.gdx.math.Polygon::float[] localVertices, com.badlogic.gdx.math.Polygon::float x, com.badlogic.gdx.math.Polygon::float y, com.badlogic.gdx.math.Polygon::float originX, com.badlogic.gdx.math.Polygon::float originY, com.badlogic.gdx.math.Polygon::setOrigin(float, float):void, com.badlogic.gdx.math.Polygon::getTransformedVertices():float[], com.badlogic.gdx.math.Polygon::resetTransformations():void, com.badlogic.gdx.math.Polygon::setPosition(float, float):void, com.badlogic.gdx.math.Polygon::translate(float, float):void, com.badlogic.gdx.math.Polygon::setScale(float, float):void, com.badlogic.gdx.math.Polygon::scale(float):void, com.badlogic.gdx.math.Polygon::float rotation, com.badlogic.gdx.math.Polygon::setRotation(float):void, com.badlogic.gdx.math.Polygon::rotate(float):void, com.badlogic.gdx.math.Polygon::float scaleX, com.badlogic.gdx.math.Polygon::float scaleY, com.badlogic.gdx.math.Polygon::boolean dirty, com.badlogic.gdx.math.Polygon::dirty():void, com.badlogic.gdx.math.Polygon::setVertices(float[]):void, com.badlogic.gdx.math.Polygon::setVertex(int, float, float):void, com.badlogic.gdx.math.Polygon::getVertexCount():int]
com.badlogic.gdx.math.Polygon	[com.badlogic.gdx.math.Polygon::float originX, com.badlogic.gdx.math.Polygon::float originY, com.badlogic.gdx.math.Polygon::setOrigin(float, float):void]
com.badlogic.gdx.math.Polygon	[com.badlogic.gdx.math.Polygon::float x, com.badlogic.gdx.math.Polygon::float y, com.badlogic.gdx.math.Polygon::float originX, com.badlogic.gdx.math.Polygon::float originY, com.badlogic.gdx.math.Polygon::setOrigin(float, float):void, com.badlogic.gdx.math.Polygon::getTransformedVertices():float[], com.badlogic.gdx.math.Polygon::resetTransformations():void, com.badlogic.gdx.math.Polygon::setPosition(float, float):void, com.badlogic.gdx.math.Polygon::translate(float, float):void, com.badlogic.gdx.math.Polygon::setScale(float, float):void, com.badlogic.gdx.math.Polygon::scale(float):void, com.badlogic.gdx.math.Polygon::float rotation, com.badlogic.gdx.math.Polygon::setRotation(float):void, com.badlogic.gdx.math.Polygon::rotate(float):void, com.badlogic.gdx.math.Polygon::float scaleX, com.badlogic.gdx.math.Polygon::float scaleY, com.badlogic.gdx.math.Polygon::boolean dirty, com.badlogic.gdx.math.Polygon::dirty():void]
com.badlogic.gdx.scenes.scene2d.ui.TooltipManager	[com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::float initialTime, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::boolean enabled, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::com.badlogic.gdx.utils.Array<com.badlogic.gdx.scenes.scene2d.ui.Tooltip> shown, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::float time, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::com.badlogic.gdx.scenes.scene2d.ui.Tooltip showTooltip, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::com.badlogic.gdx.utils.Timer.Task showTask, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::com.badlogic.gdx.utils.Timer.Task resetTask, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::touchDown(com.badlogic.gdx.scenes.scene2d.ui.Tooltip):void, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::enter(com.badlogic.gdx.scenes.scene2d.ui.Tooltip):void, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::instant():void, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::hide(com.badlogic.gdx.scenes.scene2d.ui.Tooltip):void, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::hideAll():void, com.badlogic.gdx.scenes.scene2d.ui.TooltipManager::float resetTime]
com.badlogic.gdx.graphics.g3d.decals.DecalBatch	[com.badlogic.gdx.graphics.g3d.decals.DecalBatch::com.badlogic.gdx.utils.SortedIntList<com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.decals.Decal>> groupList, com.badlogic.gdx.graphics.g3d.decals.DecalBatch::com.badlogic.gdx.graphics.g3d.decals.GroupStrategy groupStrategy, com.badlogic.gdx.graphics.g3d.decals.DecalBatch::com.badlogic.gdx.utils.Pool<com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.decals.Decal>> groupPool, com.badlogic.gdx.graphics.g3d.decals.DecalBatch::com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.decals.Decal>> usedGroups, com.badlogic.gdx.graphics.g3d.decals.DecalBatch::flush():void, com.badlogic.gdx.graphics.g3d.decals.DecalBatch::add(com.badlogic.gdx.graphics.g3d.decals.Decal):void, com.badlogic.gdx.graphics.g3d.decals.DecalBatch::clear():void, com.badlogic.gdx.graphics.g3d.decals.DecalBatch::render():void]
com.badlogic.gdx.utils.UBJsonReader	[com.badlogic.gdx.utils.UBJsonReader::parseString(java.io.DataInputStream, boolean, byte):java.lang.String, com.badlogic.gdx.utils.UBJsonReader::parseSize(java.io.DataInputStream, byte, boolean, long):long, com.badlogic.gdx.utils.UBJsonReader::readUChar(java.io.DataInputStream):short, com.badlogic.gdx.utils.UBJsonReader::readUShort(java.io.DataInputStream):int, com.badlogic.gdx.utils.UBJsonReader::readUInt(java.io.DataInputStream):long, com.badlogic.gdx.utils.UBJsonReader::readString(java.io.DataInputStream, long):java.lang.String]
com.badlogic.gdx.utils.compression.lz.OutWindow	[com.badlogic.gdx.utils.compression.lz.OutWindow::byte[] _buffer, com.badlogic.gdx.utils.compression.lz.OutWindow::int _windowSize, com.badlogic.gdx.utils.compression.lz.OutWindow::int _pos, com.badlogic.gdx.utils.compression.lz.OutWindow::int _streamPos, com.badlogic.gdx.utils.compression.lz.OutWindow::Init(boolean):void, com.badlogic.gdx.utils.compression.lz.OutWindow::Create(int):void, com.badlogic.gdx.utils.compression.lz.OutWindow::Flush():void, com.badlogic.gdx.utils.compression.lz.OutWindow::CopyBlock(int, int):void, com.badlogic.gdx.utils.compression.lz.OutWindow::PutByte(byte):void, com.badlogic.gdx.utils.compression.lz.OutWindow::GetByte(int):byte]
com.badlogic.gdx.utils.compression.lz.OutWindow	[com.badlogic.gdx.utils.compression.lz.OutWindow::java.io.OutputStream _stream, com.badlogic.gdx.utils.compression.lz.OutWindow::SetStream(java.io.OutputStream):void, com.badlogic.gdx.utils.compression.lz.OutWindow::ReleaseStream():void]
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder	[com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::com.badlogic.gdx.graphics.g3d.Model model, com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::node():com.badlogic.gdx.graphics.g3d.model.Node, com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::com.badlogic.gdx.graphics.g3d.model.Node node, com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::endnode():void, com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::node(com.badlogic.gdx.graphics.g3d.model.Node):com.badlogic.gdx.graphics.g3d.model.Node, com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::node(java.lang.String, com.badlogic.gdx.graphics.g3d.Model):com.badlogic.gdx.graphics.g3d.model.Node]
com.badlogic.gdx.graphics.g3d.utils.ModelBuilder	[com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::com.badlogic.gdx.graphics.g3d.model.Node node, com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::endnode():void, com.badlogic.gdx.graphics.g3d.utils.ModelBuilder::node(com.badlogic.gdx.graphics.g3d.model.Node):com.badlogic.gdx.graphics.g3d.model.Node]
com.badlogic.gdx.scenes.scene2d.Stage	[com.badlogic.gdx.scenes.scene2d.Stage::boolean debugAll, com.badlogic.gdx.scenes.scene2d.Stage::setDebugAll(boolean):void, com.badlogic.gdx.scenes.scene2d.Stage::boolean debugUnderMouse, com.badlogic.gdx.scenes.scene2d.Stage::setDebugUnderMouse(boolean):void, com.badlogic.gdx.scenes.scene2d.Stage::boolean debugParentUnderMouse, com.badlogic.gdx.scenes.scene2d.Stage::setDebugParentUnderMouse(boolean):void, com.badlogic.gdx.scenes.scene2d.Stage::com.badlogic.gdx.scenes.scene2d.ui.Table.Debug debugTableUnderMouse, com.badlogic.gdx.scenes.scene2d.Stage::setDebugTableUnderMouse(com.badlogic.gdx.scenes.scene2d.ui.Table.Debug):void]
com.badlogic.gdx.scenes.scene2d.Stage	[com.badlogic.gdx.scenes.scene2d.Stage::boolean debugAll, com.badlogic.gdx.scenes.scene2d.Stage::setDebugAll(boolean):void, com.badlogic.gdx.scenes.scene2d.Stage::boolean debugUnderMouse, com.badlogic.gdx.scenes.scene2d.Stage::setDebugUnderMouse(boolean):void, com.badlogic.gdx.scenes.scene2d.Stage::boolean debugParentUnderMouse, com.badlogic.gdx.scenes.scene2d.Stage::setDebugParentUnderMouse(boolean):void]
com.badlogic.gdx.scenes.scene2d.Stage	[com.badlogic.gdx.scenes.scene2d.Stage::boolean debugAll, com.badlogic.gdx.scenes.scene2d.Stage::setDebugAll(boolean):void, com.badlogic.gdx.scenes.scene2d.Stage::boolean debugUnderMouse, com.badlogic.gdx.scenes.scene2d.Stage::setDebugUnderMouse(boolean):void]
com.badlogic.gdx.graphics.g3d.ModelCache	[com.badlogic.gdx.graphics.g3d.ModelCache::com.badlogic.gdx.utils.FlushablePool<com.badlogic.gdx.graphics.g3d.Renderable> renderablesPool, com.badlogic.gdx.graphics.g3d.ModelCache::com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.Renderable> tmp, com.badlogic.gdx.graphics.g3d.ModelCache::add(java.lang.Iterable<T>):void, com.badlogic.gdx.graphics.g3d.ModelCache::add(com.badlogic.gdx.graphics.g3d.RenderableProvider):void]
com.badlogic.gdx.math.collision.OrientedBoundingBox	[com.badlogic.gdx.math.collision.OrientedBoundingBox::com.badlogic.gdx.math.Vector3[] axes, com.badlogic.gdx.math.collision.OrientedBoundingBox::com.badlogic.gdx.math.Vector3[] vertices, com.badlogic.gdx.math.collision.OrientedBoundingBox::init():void, com.badlogic.gdx.math.collision.OrientedBoundingBox::intersects(com.badlogic.gdx.math.collision.BoundingBox):boolean, com.badlogic.gdx.math.collision.OrientedBoundingBox::intersects(com.badlogic.gdx.math.collision.OrientedBoundingBox):boolean, com.badlogic.gdx.math.collision.OrientedBoundingBox::getVertices(com.badlogic.gdx.math.collision.BoundingBox):com.badlogic.gdx.math.Vector3[]]
com.badlogic.gdx.math.collision.OrientedBoundingBox	[com.badlogic.gdx.math.collision.OrientedBoundingBox::com.badlogic.gdx.math.Vector3[] axes, com.badlogic.gdx.math.collision.OrientedBoundingBox::com.badlogic.gdx.math.Vector3[] vertices, com.badlogic.gdx.math.collision.OrientedBoundingBox::init():void]
com.badlogic.gdx.math.collision.OrientedBoundingBox	[com.badlogic.gdx.math.collision.OrientedBoundingBox::com.badlogic.gdx.math.collision.BoundingBox bounds, com.badlogic.gdx.math.collision.OrientedBoundingBox::com.badlogic.gdx.math.Matrix4 transform, com.badlogic.gdx.math.collision.OrientedBoundingBox::setTransform(com.badlogic.gdx.math.Matrix4):void, com.badlogic.gdx.math.collision.OrientedBoundingBox::mul(com.badlogic.gdx.math.Matrix4):void, com.badlogic.gdx.math.collision.OrientedBoundingBox::set(com.badlogic.gdx.math.collision.BoundingBox, com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.collision.OrientedBoundingBox, com.badlogic.gdx.math.collision.OrientedBoundingBox::com.badlogic.gdx.math.Matrix4 inverseTransform, com.badlogic.gdx.math.collision.OrientedBoundingBox::contains(com.badlogic.gdx.math.collision.BoundingBox):boolean, com.badlogic.gdx.math.collision.OrientedBoundingBox::contains(com.badlogic.gdx.math.collision.OrientedBoundingBox):boolean, com.badlogic.gdx.math.collision.OrientedBoundingBox::setBounds(com.badlogic.gdx.math.collision.BoundingBox):void, com.badlogic.gdx.math.collision.OrientedBoundingBox::update():void, com.badlogic.gdx.math.collision.OrientedBoundingBox::contains(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Matrix4):boolean]
com.badlogic.gdx.scenes.scene2d.ui.Label	[com.badlogic.gdx.scenes.scene2d.ui.Label::float fontScaleX, com.badlogic.gdx.scenes.scene2d.ui.Label::float fontScaleY, com.badlogic.gdx.scenes.scene2d.ui.Label::boolean fontScaleChanged, com.badlogic.gdx.scenes.scene2d.ui.Label::setFontScale(float, float):void]
com.badlogic.gdx.scenes.scene2d.ui.Label	[com.badlogic.gdx.scenes.scene2d.ui.Label::int labelAlign, com.badlogic.gdx.scenes.scene2d.ui.Label::int lineAlign, com.badlogic.gdx.scenes.scene2d.ui.Label::setAlignment(int, int):void]
com.badlogic.gdx.graphics.VertexAttributes	[com.badlogic.gdx.graphics.VertexAttributes::int boneWeightUnits, com.badlogic.gdx.graphics.VertexAttributes::getBoneWeights():int, com.badlogic.gdx.graphics.VertexAttributes::getTextureCoordinates():int, com.badlogic.gdx.graphics.VertexAttributes::int textureCoordinates]
com.badlogic.gdx.graphics.g2d.RepeatablePolygonSprite	[com.badlogic.gdx.graphics.g2d.RepeatablePolygonSprite::float x, com.badlogic.gdx.graphics.g2d.RepeatablePolygonSprite::float y, com.badlogic.gdx.graphics.g2d.RepeatablePolygonSprite::setPosition(float, float):void]
com.badlogic.gdx.graphics.g3d.ModelInstance	[com.badlogic.gdx.graphics.g3d.ModelInstance::com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.model.Node> nodes, com.badlogic.gdx.graphics.g3d.ModelInstance::copyNodes(com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.model.Node>):void, com.badlogic.gdx.graphics.g3d.ModelInstance::copyNodes(com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.model.Node>, java.lang.String[]):void, com.badlogic.gdx.graphics.g3d.ModelInstance::copyNodes(com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.model.Node>, com.badlogic.gdx.utils.Array<java.lang.String>):void, com.badlogic.gdx.graphics.g3d.ModelInstance::invalidate():void, com.badlogic.gdx.graphics.g3d.ModelInstance::extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox):com.badlogic.gdx.math.collision.BoundingBox, com.badlogic.gdx.graphics.g3d.ModelInstance::calculateTransforms():void]
com.badlogic.gdx.graphics.g3d.model.Node	[com.badlogic.gdx.graphics.g3d.model.Node::com.badlogic.gdx.graphics.g3d.model.Node parent, com.badlogic.gdx.graphics.g3d.model.Node::insertChild(int, T):int, com.badlogic.gdx.graphics.g3d.model.Node::removeChild(T):boolean, com.badlogic.gdx.graphics.g3d.model.Node::hasParent():boolean, com.badlogic.gdx.graphics.g3d.model.Node::detach():void, com.badlogic.gdx.graphics.g3d.model.Node::insertChildren(int, java.lang.Iterable<T>):int, com.badlogic.gdx.graphics.g3d.model.Node::hasChildren():boolean, com.badlogic.gdx.graphics.g3d.model.Node::getChildCount():int]
com.badlogic.gdx.graphics.g3d.model.Node	[com.badlogic.gdx.graphics.g3d.model.Node::com.badlogic.gdx.graphics.g3d.model.Node parent, com.badlogic.gdx.graphics.g3d.model.Node::insertChild(int, T):int, com.badlogic.gdx.graphics.g3d.model.Node::removeChild(T):boolean, com.badlogic.gdx.graphics.g3d.model.Node::hasParent():boolean, com.badlogic.gdx.graphics.g3d.model.Node::detach():void, com.badlogic.gdx.graphics.g3d.model.Node::insertChildren(int, java.lang.Iterable<T>):int]
com.badlogic.gdx.graphics.g3d.particles.ParallelArray	[com.badlogic.gdx.graphics.g3d.particles.ParallelArray::com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.particles.ParallelArray.Channel> arrays, com.badlogic.gdx.graphics.g3d.particles.ParallelArray::addChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelDescriptor, com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelInitializer<T>):T, com.badlogic.gdx.graphics.g3d.particles.ParallelArray::findIndex(int):int, com.badlogic.gdx.graphics.g3d.particles.ParallelArray::getChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelDescriptor):T]
com.badlogic.gdx.graphics.g3d.particles.ParticleController	[com.badlogic.gdx.graphics.g3d.particles.ParticleController::com.badlogic.gdx.math.collision.BoundingBox boundingBox, com.badlogic.gdx.graphics.g3d.particles.ParticleController::getBoundingBox():com.badlogic.gdx.math.collision.BoundingBox, com.badlogic.gdx.graphics.g3d.particles.ParticleController::calculateBoundingBox():void]
com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch	[com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch::com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute blendingAttribute, com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch::com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute depthTestAttribute, com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch::allocRenderable():void]
com.badlogic.gdx.graphics.g3d.utils.RenderContext	[com.badlogic.gdx.graphics.g3d.utils.RenderContext::float depthRangeNear, com.badlogic.gdx.graphics.g3d.utils.RenderContext::float depthRangeFar, com.badlogic.gdx.graphics.g3d.utils.RenderContext::setDepthTest(int, float, float):void]
com.badlogic.gdx.scenes.scene2d.ui.Image	[com.badlogic.gdx.scenes.scene2d.ui.Image::com.badlogic.gdx.utils.Scaling scaling, com.badlogic.gdx.scenes.scene2d.ui.Image::setScaling(com.badlogic.gdx.utils.Scaling):void, com.badlogic.gdx.scenes.scene2d.ui.Image::int align, com.badlogic.gdx.scenes.scene2d.ui.Image::setAlign(int):void]
com.badlogic.gdx.utils.ComparableTimSort	[com.badlogic.gdx.utils.ComparableTimSort::java.lang.Object[] tmp, com.badlogic.gdx.utils.ComparableTimSort::int tmpCount, com.badlogic.gdx.utils.ComparableTimSort::ensureCapacity(int):java.lang.Object[]]
com.badlogic.gdx.math.Matrix4	[com.badlogic.gdx.math.Matrix4::set(float[]):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mulLeft(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mul(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::tra():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::toNormalMatrix():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::inv():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::idt():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslation(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::getTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Matrix4::setToTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardDirection(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardTarget(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::det():float, com.badlogic.gdx.math.Matrix4::det3x3():float, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho2D(float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho2D(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setTranslation(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::lerp(com.badlogic.gdx.math.Matrix4, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setAsAffine(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::getScaleXSquared():float, com.badlogic.gdx.math.Matrix4::getScaleX():float, com.badlogic.gdx.math.Matrix4::getScaleYSquared():float, com.badlogic.gdx.math.Matrix4::getScaleY():float]
com.badlogic.gdx.math.Matrix4	[com.badlogic.gdx.math.Matrix4::set(float[]):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mulLeft(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mul(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::tra():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::toNormalMatrix():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::inv():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::idt():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslation(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::getTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Matrix4::setToTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardDirection(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardTarget(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::det():float, com.badlogic.gdx.math.Matrix4::det3x3():float, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho2D(float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho2D(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setTranslation(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::lerp(com.badlogic.gdx.math.Matrix4, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setAsAffine(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::getScaleXSquared():float, com.badlogic.gdx.math.Matrix4::getScaleX():float]
com.badlogic.gdx.math.Matrix4	[com.badlogic.gdx.math.Matrix4::set(float[]):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mulLeft(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mul(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::tra():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::toNormalMatrix():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::inv():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::idt():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslation(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::getTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Matrix4::setToTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardDirection(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardTarget(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::det():float, com.badlogic.gdx.math.Matrix4::det3x3():float, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho2D(float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho2D(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setTranslation(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::lerp(com.badlogic.gdx.math.Matrix4, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setAsAffine(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(float):com.badlogic.gdx.math.Matrix4]
com.badlogic.gdx.math.Matrix4	[com.badlogic.gdx.math.Matrix4::set(float[]):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mulLeft(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(float, float, float, float, float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::mul(com.badlogic.gdx.math.Matrix4):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::tra():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::toNormalMatrix():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::inv():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::idt():com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslation(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::set(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::trn(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::scl(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::getTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Matrix4::setToTranslation(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToTranslationAndScaling(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToScaling(com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardDirection(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::rotateTowardTarget(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToLookAt(com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3, com.badlogic.gdx.math.Vector3):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::det():float, com.badlogic.gdx.math.Matrix4::det3x3():float, com.badlogic.gdx.math.Matrix4::setToProjection(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4, com.badlogic.gdx.math.Matrix4::setToOrtho(float, float, float, float, float, float):com.badlogic.gdx.math.Matrix4]
com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader	[com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::com.badlogic.gdx.math.Quaternion tempQ, com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::parseMeshes(com.badlogic.gdx.graphics.g3d.model.data.ModelData, com.badlogic.gdx.utils.JsonValue):void, com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::parseAttributes(com.badlogic.gdx.utils.JsonValue):com.badlogic.gdx.graphics.VertexAttribute[], com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::parseNodes(com.badlogic.gdx.graphics.g3d.model.data.ModelData, com.badlogic.gdx.utils.JsonValue):com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.model.data.ModelNode>, com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::parseNodesRecursively(com.badlogic.gdx.utils.JsonValue):com.badlogic.gdx.graphics.g3d.model.data.ModelNode, com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::parseAnimations(com.badlogic.gdx.graphics.g3d.model.data.ModelData, com.badlogic.gdx.utils.JsonValue):void, com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::parseMaterials(com.badlogic.gdx.graphics.g3d.model.data.ModelData, com.badlogic.gdx.utils.JsonValue, java.lang.String):void, com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::parseColor(com.badlogic.gdx.utils.JsonValue):com.badlogic.gdx.graphics.Color, com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader::readVector2(com.badlogic.gdx.utils.JsonValue, float, float):com.badlogic.gdx.math.Vector2]
com.badlogic.gdx.utils.XmlWriter	[com.badlogic.gdx.utils.XmlWriter::java.io.Writer writer, com.badlogic.gdx.utils.XmlWriter::java.lang.String currentElement, com.badlogic.gdx.utils.XmlWriter::element(java.lang.String):com.badlogic.gdx.utils.XmlWriter, com.badlogic.gdx.utils.XmlWriter::indent():void, com.badlogic.gdx.utils.XmlWriter::pop():com.badlogic.gdx.utils.XmlWriter, com.badlogic.gdx.utils.XmlWriter::int indent, com.badlogic.gdx.utils.XmlWriter::startElementContent():boolean, com.badlogic.gdx.utils.XmlWriter::text(java.lang.Object):com.badlogic.gdx.utils.XmlWriter, com.badlogic.gdx.utils.XmlWriter::attribute(java.lang.String, java.lang.Object):com.badlogic.gdx.utils.XmlWriter]
com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController	[com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController::com.badlogic.gdx.utils.Pool<com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController.Transform> transformPool, com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController::apply(com.badlogic.gdx.graphics.g3d.model.Animation, float, float):void, com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController::boolean applying, com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController::applyAnimations(com.badlogic.gdx.graphics.g3d.model.Animation, float, com.badlogic.gdx.graphics.g3d.model.Animation, float, float):void, com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController::begin():void]
com.badlogic.gdx.graphics.glutils.GLFrameBuffer	[com.badlogic.gdx.graphics.glutils.GLFrameBuffer::bind():void, com.badlogic.gdx.graphics.glutils.GLFrameBuffer::unbind():void, com.badlogic.gdx.graphics.glutils.GLFrameBuffer::begin():void, com.badlogic.gdx.graphics.glutils.GLFrameBuffer::setFrameBufferViewport():void, com.badlogic.gdx.graphics.glutils.GLFrameBuffer::end(int, int, int, int):void, com.badlogic.gdx.graphics.glutils.GLFrameBuffer::transfer(com.badlogic.gdx.graphics.glutils.GLFrameBuffer<T>, int):void, com.badlogic.gdx.graphics.glutils.GLFrameBuffer::getHeight():int, com.badlogic.gdx.graphics.glutils.GLFrameBuffer::getWidth():int]
com.badlogic.gdx.graphics.g2d.Sprite	[com.badlogic.gdx.graphics.g2d.Sprite::com.badlogic.gdx.graphics.Color color, com.badlogic.gdx.graphics.g2d.Sprite::float packedColor, com.badlogic.gdx.graphics.g2d.Sprite::setColor(com.badlogic.gdx.graphics.Color):void, com.badlogic.gdx.graphics.g2d.Sprite::setAlpha(float):void, com.badlogic.gdx.graphics.g2d.Sprite::setColor(float, float, float, float):void, com.badlogic.gdx.graphics.g2d.Sprite::setPackedColor(float):void, com.badlogic.gdx.graphics.g2d.Sprite::draw(com.badlogic.gdx.graphics.g2d.Batch, float):void]
com.badlogic.gdx.graphics.g3d.ModelBatch	[com.badlogic.gdx.graphics.g3d.ModelBatch::com.badlogic.gdx.graphics.Camera camera, com.badlogic.gdx.graphics.g3d.ModelBatch::com.badlogic.gdx.graphics.g3d.utils.RenderContext context, com.badlogic.gdx.graphics.g3d.ModelBatch::setCamera(com.badlogic.gdx.graphics.Camera):void, com.badlogic.gdx.graphics.g3d.ModelBatch::end():void, com.badlogic.gdx.graphics.g3d.ModelBatch::boolean ownContext, com.badlogic.gdx.graphics.g3d.ModelBatch::begin(com.badlogic.gdx.graphics.Camera):void]
